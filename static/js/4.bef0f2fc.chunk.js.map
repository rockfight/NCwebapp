{"version":3,"sources":["components/spinner/Spinner.js","api/autoSuggest.js","components/autocomplete/CompanyAutoSuggest.js","nav.js","views/MarketDepth/MarketDepth.js","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1___default","Spinner","a","createElement","type","color","height","width","config","method","baseURL","autoSuggestRequestHandler","responseType","params","request","autoSuggestCompanyList","Object","objectSpread","CompanyAutoSuggest","props","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","suggestions","setSuggestions","_useState5","_useState6","companies","setCompanies","useEffect","axios","then","data","inputProps","placeholder","onChange","event","_ref","newValue","react_default","dist_default","multiSection","onSuggestionsFetchRequested","_ref2","escapedValue","trim","replace","regex","RegExp","map","section","title","filter","test","SYMBOL","COMPANY","length","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","className","renderSectionTitle","getSectionSuggestions","onSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","nav","items","name","url","icon","variant","attributes","target","rel","badge","text","disabled","MarketDepth","companySymbol","setCompanySymbol","companyName","setCompanyName","depth","setDepth","_useState7","_useState8","loading","setLoading","_useState9","_useState10","fadeIn","setFadein","market","useContext","MarketContext","toggleId","setInterval","clearInterval","get","response","catch","error","Fragment","Row","Col","Card","CardHeader","sm","symbol","Fade","in","Badge","hasOwnProperty","pohlc","CardBody","xs","Table","striped","bordered","responsive","size","buyOrder","header","key","sellOrder","row","index","totalBuy","reduce","acc","amount","totalSell","routes","path","exact","component","DefaultLayout","React","lazy","Promise","all","e","bind","DefaultAside","DefaultFooter","DefaultHeader","emailVerified","UserContext","token","setToken","firebase","auth","currentUser","getIdToken","idToken","es","fixed","react","fallback","display","assign","navConfig","appRoutes","Container","fluid","Switch","route","idx","Route","render","Redirect","from","to"],"mappings":"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","file":"static/js/4.bef0f2fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height=\"100\"\r\n            width=\"100\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default Spinner;","import {autoSuggestRequestHandler} from \"./urls\";\r\n\r\nconst config = {\r\n    method: 'get',\r\n    baseURL: autoSuggestRequestHandler,\r\n    responseType: 'json',\r\n    params: {\r\n        request: null\r\n    }\r\n};\r\n\r\nconst COMPANYLIST = \"COMPANYLIST\";\r\nconst SUBINDEXLIST = \"SUBINDEXLIST\";\r\n\r\nexport const autoSuggestCompanyList = {...config, params: {...config.params, request:COMPANYLIST}};\r\nexport const autoSuggestSubIndexList = {...config, params: {...config.params, request:SUBINDEXLIST}};","import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport './CompanyAutoSuggest.css';\r\nimport axios from 'axios';\r\nimport { autoSuggestCompanyList } from '../../api/autoSuggest'\r\n\r\n\r\n\r\nfunction CompanyAutoSuggest(props) {\r\n\r\n    const [value, setValue] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [companies, setCompanies] = useState([])\r\n\r\n    const escapeRegexCharacters = (str) => {\r\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    const getSuggestions = (value) => {\r\n        const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n        if (escapedValue === '') {\r\n            return [];\r\n        }\r\n\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n\r\n        return companies\r\n            .map(section => {\r\n                return {\r\n                    title: section.title,\r\n                    companies: section.companies.filter(companies => regex.test(companies.SYMBOL) || regex.test(companies.COMPANY))\r\n                };\r\n            })\r\n            .filter(section => section.companies.length > 0);\r\n    }\r\n\r\n    const getSuggestionValue = (suggestion) => {\r\n        return suggestion.SYMBOL;\r\n    }\r\n\r\n    const renderSuggestion = (suggestion) => {\r\n        return (\r\n            <span>{suggestion.SYMBOL} | <small className=\"text-muted\">{suggestion.COMPANY}</small></span>\r\n\r\n        );\r\n    }\r\n\r\n    const renderSectionTitle = (section) => {\r\n        return (\r\n            <strong>{section.title}</strong>\r\n        );\r\n    }\r\n\r\n    const getSectionSuggestions = (section) => {\r\n        return section.companies;\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios(autoSuggestCompanyList)\r\n            .then(companies => {\r\n                setCompanies(companies.data);\r\n            })\r\n    }, [])\r\n\r\n    const onChange = (event, { newValue, method }) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const onSuggestionsFetchRequested = ({ value }) => {\r\n\r\n        setSuggestions(getSuggestions(value))\r\n    };\r\n\r\n    const onSuggestionsClearRequested = () => {\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n        props.onSuggestionSelected(suggestion.SYMBOL, suggestion.COMPANY);\r\n    }\r\n\r\n\r\n\r\n    const inputProps = {\r\n        placeholder: \"Select Company\",\r\n        value,\r\n        onChange: onChange\r\n    }\r\n\r\n    return (\r\n        <Autosuggest\r\n            multiSection={true}\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={renderSuggestion}\r\n            renderSectionTitle={renderSectionTitle}\r\n            getSectionSuggestions={getSectionSuggestions}\r\n            inputProps={inputProps}\r\n            onSuggestionSelected={onSuggestionSelected} />\r\n    );\r\n}\r\n\r\n\r\nexport default CompanyAutoSuggest;\r\n","export const nav = {\r\n  items: [\r\n    {\r\n      name: 'Launch Chart',\r\n      url: '/login',\r\n      icon: 'icon-graph',\r\n      variant: 'primary',\r\n      attributes: { target: '_blank', rel: \"noopener\" },\r\n    },\r\n    {\r\n      name: 'Market',\r\n      url: '/dashboard',\r\n      icon: 'icon-speedometer',\r\n    },\r\n    {\r\n      name: 'Stock Live',\r\n      url: '/stocklive',\r\n      icon: 'icon-bell',\r\n    },\r\n    {\r\n      name: 'Market Depth',\r\n      url: '/marketDepth',\r\n      icon: 'icon-list',\r\n      badge: {\r\n        variant: 'warning',\r\n        text: 'new',\r\n      },\r\n    },\r\n    {\r\n      name: 'Companies',\r\n      url: '/companies',\r\n      icon: 'icon-chart',\r\n    },\r\n    {\r\n      title: true,\r\n      name: 'Members Area',\r\n    },\r\n    {\r\n      name: 'Portfolio',\r\n      url: '/portfolio',\r\n      icon: 'icon-user',\r\n    },\r\n    {\r\n      name: 'Analytics',\r\n      url: '/register',\r\n      icon: 'icon-ban',\r\n      attributes: { disabled: true },\r\n      badge: {\r\n        variant: 'success',\r\n        text: 'Soon',\r\n      },\r\n    }\r\n  ],\r\n};","import axios from 'axios';\r\nimport React, { useEffect, useContext, useState } from 'react';\r\nimport { Badge, Fade, Card, CardBody, CardHeader, CardFooter, Col, Progress, Row, Table, Button } from 'reactstrap';\r\nimport CompanyAutoSuggest from '../../components/autocomplete/CompanyAutoSuggest';\r\nimport { MarketContext } from '../../context/contexts';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\n\r\nfunction MarketDepth() {\r\n\r\n    const [companySymbol, setCompanySymbol] = useState();\r\n    const [companyName, setCompanyName] = useState();\r\n    const [depth, setDepth] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n    const [fadeIn, setFadein] = useState(true);\r\n    const { market } = useContext(MarketContext);\r\n\r\n\r\n    useEffect(() => {\r\n        if (market == \"Live\") {\r\n            let toggleId = -1;\r\n            toggleId = setInterval(() => {\r\n                setFadein(!fadeIn)\r\n            }, 600);\r\n            return () => {\r\n                clearInterval(toggleId);\r\n            }\r\n        } else {\r\n            setFadein(true);\r\n        }\r\n    });\r\n\r\n    const updateSymbol = (symbol, name) => {\r\n        setCompanySymbol(symbol);\r\n        setCompanyName(name);\r\n        setDepth(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (companySymbol) {\r\n            axios.get('https://api.nepsechart.com/requestHandler/symbol.php?request=MARKETDEPTH&symbol=' + companySymbol)\r\n                .then(function (response) {\r\n                    setLoading(false);\r\n                    setDepth(response.data);\r\n                })\r\n                .catch(function (error) {\r\n\r\n                })\r\n        }\r\n    }, [companySymbol])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col className=\"px-0\">\r\n                    <Card className=\"px-0\">\r\n                        <CardHeader>\r\n                            <Row>\r\n                                <Col sm=\"5\">\r\n                                    <CompanyAutoSuggest onSuggestionSelected={updateSymbol} />\r\n                                </Col>\r\n                                <Col sm=\"5\">\r\n                                    <h3>{companyName}</h3>\r\n                                </Col>\r\n                                <Col sm=\"2\">\r\n                                    <Fade in={fadeIn} className=\"float-right\"><Badge color=\"primary\"><small>{market}</small></Badge></Fade>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardHeader>\r\n                    </Card>\r\n                    {depth ?\r\n                        <Card className=\"px-0\">\r\n                            {depth.hasOwnProperty('pohlc') ?\r\n                                <CardHeader>\r\n                                    {loading ? null\r\n                                        :\r\n                                        <Row>\r\n                                            <Col sm=\"4\">\r\n                                                <strong>{depth.pohlc[0]} </strong>\r\n                                                <small className=\"text-muted\"> Previous Close</small>\r\n                                            </Col>\r\n                                            <Col sm=\"2\">\r\n                                                <strong>{depth.pohlc[1]}</strong>\r\n                                                <small className=\"text-muted\"> Open</small>\r\n                                            </Col>\r\n                                            <Col sm=\"2\">\r\n                                                <strong>{depth.pohlc[2]}</strong>\r\n                                                <small className=\"text-muted\"> High</small>\r\n                                            </Col>\r\n                                            <Col sm=\"2\">\r\n                                                <strong>{depth.pohlc[3]}</strong>\r\n                                                <small className=\"text-muted\"> Low</small>\r\n                                            </Col>\r\n                                            <Col sm=\"2\">\r\n                                                <strong>{depth.pohlc[4]}</strong>\r\n                                                <small className=\"text-muted\"> Close</small>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    }\r\n                                </CardHeader>\r\n                                :\r\n                                null}\r\n\r\n                            <CardBody>\r\n                                {market == 'Live' ?\r\n                                    <Row>\r\n                                        <Col xs=\"12\">\r\n                                            {depth.hasOwnProperty('buyOrder') ?\r\n                                                <Table striped bordered responsive size=\"sm\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            {depth.buyOrder.header.map(header => <th key={header}>{header}</th>)}\r\n                                                            {depth.sellOrder.header.map(header => <th key={header}>{header}</th>)}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {depth.buyOrder.data.map((row, index) =>\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{row[0]}</td>\r\n                                                                <td>{row[1]}</td>\r\n                                                                <td>{row[2]}</td>\r\n                                                                <td>{depth.sellOrder.data[index][0]}</td>\r\n                                                                <td>{depth.sellOrder.data[index][1]}</td>\r\n                                                                <td>{depth.sellOrder.data[index][2]}</td>\r\n                                                            </tr>\r\n                                                        )}\r\n                                                        <tr key=\"totalBuy\">\r\n                                                            <td><strong>Hidden {depth.totalBuy - depth.buyOrder.data.reduce((acc, amount) => amount[1] != '---' ? (acc + amount[1]) : acc, 0)}</strong></td>\r\n                                                            <td><strong>Visible {depth.buyOrder.data.reduce((acc, amount) => amount[1] != '---' ? (acc + amount[1]) : acc, 0)}</strong></td>\r\n                                                            <td><strong>Total {depth.totalBuy}</strong></td>\r\n                                                            <td><strong>Total {depth.totalSell}</strong></td>\r\n                                                            <td><strong>Visible {depth.sellOrder.data.reduce((acc, amount) => amount[1] != '---' ? (acc + amount[1]) : acc, 0)}</strong></td>\r\n                                                            <td><strong>Hidden {depth.totalSell - depth.sellOrder.data.reduce((acc, amount) => amount[1] != '---' ? (acc + amount[1]) : acc, 0)}</strong></td>\r\n\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                :\r\n                                                null}\r\n\r\n                                        </Col>\r\n                                    </Row>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </CardBody>\r\n                        </Card>\r\n                        :\r\n                        <div className=\"text-center\">\r\n                            <strong className=\"text-center\">Loading Market Depth...</strong>\r\n                            <Spinner />\r\n                        </div>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MarketDepth;","import React from 'react';\r\nimport DefaultLayout from './containers/DefaultLayout';\r\nimport MarketDepth from './views/MarketDepth/MarketDepth';\r\n\r\n\r\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\r\nconst CompanyInfo = React.lazy(() => import('./views/CompanyInfo'));\r\nconst Portfolio = React.lazy(() => import('./views/Portfolio'));\r\nconst StockLive = React.lazy(() => import('./views/StockLive/StockLive'));\r\n\r\nexport const routes = [\r\n  { path: '/', exact: true, name: 'Home', component: DefaultLayout },\r\n  { path: '/market', name: 'Dashboard', component: Dashboard },\r\n  { path: '/companies', exact: true, name: 'Company Information', component: CompanyInfo },\r\n  { path: '/portfolio', exact: true, name: 'Portfolio', component: Portfolio },\r\n  { path: '/stocklive', exact: true, name: 'Stock Live', component: StockLive },\r\n  { path: '/marketDepth', exact: true, name: 'Market Depth', component: MarketDepth },\r\n];\r\n\r\n","import React, { useState, useEffect, useContext, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport firebase from '../../firebase/Firebase';\r\n\r\nimport {\r\n  AppAside,\r\n  AppBreadcrumb,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\nimport { nav } from '../../nav';\r\n// routes config\r\nimport { routes } from '../../routes';\r\nimport { UserContext, MarketContext } from '../../context/contexts';\r\n\r\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\r\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\n\r\n\r\n\r\n\r\nfunction DefaultLayout(props) {\r\n\r\n  const loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  const { emailVerified } = useContext(UserContext);\r\n  const {market} = useContext(MarketContext);\r\n  const [token, setToken] = useState();\r\n\r\n  nav.items[0] = {\r\n    name: 'Launch Chart',\r\n    url: token ? \"/chart\" : \"/login\",\r\n    icon: 'fa fa-line-chart',\r\n    variant: token ? 'primary' : 'secondary',\r\n    attributes: { target: token ? '_blank' : null, rel: \"noopener\" },\r\n  };\r\n\r\n  nav.items[1] = {\r\n    name: 'Market',\r\n    url: '/market',\r\n    icon: 'icon-speedometer',\r\n    badge: {\r\n      variant: market == \"Live\" ? \"primary\" : \"secondary\",\r\n      text: market,\r\n    }\r\n  }\r\n\r\n  nav.items[6] = {\r\n    name: 'Portfolio',\r\n    url: '/portfolio',\r\n    icon: 'icon-user',\r\n    badge: {\r\n      variant: \"warning\",\r\n      text: \"upgraded\",\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (emailVerified) {\r\n      firebase.auth().currentUser.getIdToken(true)\r\n        .then((idToken) => {\r\n          setToken(idToken);\r\n        })\r\n    } else {\r\n      setToken(null);\r\n    }\r\n  }, [emailVerified]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <AppHeader fixed>\r\n        <Suspense fallback={loading()}>\r\n          <DefaultHeader />\r\n        </Suspense>\r\n      </AppHeader>\r\n      <div className=\"app-body\">\r\n        <AppSidebar fixed display=\"lg\">\r\n          <AppSidebarHeader />\r\n          <AppSidebarForm />\r\n          <Suspense>\r\n            <AppSidebarNav navConfig={nav} {...props} />\r\n          </Suspense>\r\n          <AppSidebarFooter />\r\n          <AppSidebarMinimizer />\r\n        </AppSidebar>\r\n        <main className=\"main\">\r\n          <AppBreadcrumb appRoutes={routes} />\r\n          <Container fluid>\r\n            <Suspense fallback={loading()}>\r\n              <Switch>\r\n                {routes.map((route, idx) => {\r\n                  return route.component ? (\r\n                    <Route\r\n                      key={idx}\r\n                      path={route.path}\r\n                      exact={route.exact}\r\n                      name={route.name}\r\n                      render={props => (\r\n                        <route.component {...props} />\r\n                      )} />\r\n                  ) : (null);\r\n                })}\r\n                <Redirect from=\"/\" to=\"/market\" />\r\n              </Switch>\r\n            </Suspense>\r\n          </Container>\r\n        </main>\r\n        <AppAside fixed>\r\n          <Suspense fallback={loading()}>\r\n            <DefaultAside />\r\n          </Suspense>\r\n        </AppAside>\r\n      </div>\r\n      <AppFooter>\r\n        <Suspense fallback={loading()}>\r\n          <DefaultFooter />\r\n        </Suspense>\r\n      </AppFooter>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DefaultLayout;\r\n"],"sourceRoot":""}