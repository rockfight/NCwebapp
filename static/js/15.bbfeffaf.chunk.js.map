{"version":3,"sources":["api/symbol.js","api/chart.js","components/autocomplete/SimpleAutoComplete.js","components/charts/ComparisonChart.js","views/Dashboard/Dashboard.js"],"names":["config","method","baseURL","symbolRequestHandler","responseType","params","request","range","subIndexYearTurnover","Object","C_Users_Prasanna_Documents_NC_NCW_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","nepseWeekMonthYearApi","companyInfo","symbol","companyFinancial","companyCurrent","companyPrevious","contractNumber","companyReturn","chartRequestHandler","subIndexYearClosePoint","objectSpread","getSuggestionValue","suggestion","code","renderSuggestion","react_default","a","createElement","SimpleAutoComplete","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","setState","value","onSuggestionsFetchRequested","_ref2","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","itemSelected","state","escapedValue","trim","replace","regex","RegExp","console","log","choices","filter","choice","test","_this$state","inputProps","placeholder","dist_default","React","Component","lineColor","getStyle","chartOpts","tooltips","enabled","intersect","mode","position","legend","labels","boxWidth","maintainAspectRatio","animation","duration","scales","xAxes","type","time","unit","ticks","autoSkip","yAxes","beginAtZero","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","ComparisonChart","removeSymbol","bind","assertThisInitialized","addSymbol","turnover","_this2","axios","all","then","spread","close","fullTurnover","data","addedSymbols","sort","b","slice","map","addedSymbolsArray","removedSymbols","includes","chartData","companyCode","newAddSymbols","dataset","newRemoveSymbols","concat","animationDuration","footer","_this3","totalTurnover","length","Col","key","sm","md","className","parseInt","toLocaleString","toFixed","Progress","color","index","label","backgroundColor","hexToRgba","borderColor","pointHoverBackgroundColor","borderWidth","borderDash","Card","CardBody","Row","CardTitle","components_autocomplete_SimpleAutoComplete","defineProperty","style","height","marginTop","es","datasets","options","CardFooter","barChartOptions","scaleShowValues","Dashboard","_useState","useState","_useState2","slicedToArray","fadeIn","setFadein","_useState3","_useState4","tableType","setTableType","_useState5","_useState6","chartType","setChartType","_useState7","_useState8","topStocks","setTopStocks","_useState9","gainers","losers","transactions","shares","scripts","_useState10","marketSummary","setMarketSummary","_useState11","_useState12","marketInformation","setMarketInformation","_useState13","_useState14","marketCloseInformation","setMarketCloseInformation","_useState15","week","month","year","_useState16","nepseWeekMonthYear","setNepseWeekMonthYear","market","useContext","MarketContext","makeNetworkRequest","topStocksApi","marketSummaryApi","marketInformationApi","marketCloseInformationApi","onTableChangeClick","e","preventDefault","target","id","onChartTypeChangeClick","useEffect","intervalId","setInterval","clearInterval","toggleId","tableHead","tableBody","datasetIndex","cards","gain","subIndexChartLabelData","indexChartLabelData","cardHeaderClass","textClass","nepseGain","subIndexLabel","subIndexData","indexLabel","indexData","subIndexbackgroundColor","indexbackgroundColor","subindexList","indexList","indexOf","heading","head","tableData","parseFloat","NEPSE","keys","subIndex","push","weekCardClassname","monthCardClassName","yearCardClassName","weekText","monthText","yearText","currentIndex","maximum","minimum","xs","lg","react","fallback","Fade","in","tradeTime","CardHeader","avgVolume","charts_ComparisonChart","xl","href","onClick","Table","hover","bordered","responsive","size"],"mappings":"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","file":"static/js/15.bbfeffaf.chunk.js","sourcesContent":["import { symbolRequestHandler } from \"./urls\";\r\n\r\nconst config = {\r\n    method: 'get',\r\n    baseURL: symbolRequestHandler,\r\n    responseType: 'json',\r\n    params: {\r\n        request: null,\r\n        range: null\r\n    }\r\n};\r\n\r\n//Request For subindex.php\r\nconst SUBINDEXYEARTURNOVER = \"SUBINDEXYEARTURNOVER\";\r\nconst SUBINDEXCURRENT = \"SUBINDEXCURRENT\";\r\nconst SUBINDEXOPEN = \"SUBINDEXOPEN\";\r\nconst NEPSEWEEKMONTHYEAR = \"NEPSEWEEKMONTHYEAR\";\r\nconst COMPANYINFO = \"COMPANYINFO\";\r\nconst COMPANYFINANCIAL = \"COMPANYFINANCIAL\";\r\nconst COMPANYCURRENT = \"COMPANYCURRENT\";\r\nconst COMPANYPREVIOUS = \"COMPANYPREVIOUS\";\r\nconst CONTRACTNUMBER = \"CONTRACTNUMBER\";\r\nconst COMPANYRETURN = \"COMPANYRETURN\";\r\n\r\nexport const subIndexCurent = { ...config, params: { ...config.params, request: SUBINDEXCURRENT } };\r\nexport const subIndexOpen = { ...config, params: { ...config.params, request: SUBINDEXOPEN } };\r\nexport const subIndexYearTurnover = { ...config, params: { ...config.params, request: SUBINDEXYEARTURNOVER } };\r\nexport const nepseWeekMonthYearApi = { ...config, params: { ...config.params, request: NEPSEWEEKMONTHYEAR } };\r\nexport const companyInfo = { ...config, params: { ...config.params, request: COMPANYINFO, symbol: 'ADBL' } };\r\nexport const companyFinancial = { ...config, params: { ...config.params, request: COMPANYFINANCIAL, symbol: 'ADBL' } };\r\nexport const companyCurrent = { ...config, method: 'post', params: { ...config.params, request: COMPANYCURRENT } };\r\nexport const companyPrevious = { ...config, method: 'post', params: { ...config.params, request: COMPANYPREVIOUS } };\r\nexport const contractNumber = { ...config, params: { ...config.params, request: CONTRACTNUMBER } };\r\nexport const companyReturn = { ...config, params: { ...config.params, request: COMPANYRETURN, symbol: 'ADBL' } };","import {chartRequestHandler} from \"./urls\";\r\n\r\nconst config = {\r\n    method: 'get',\r\n    baseURL: chartRequestHandler,\r\n    responseType: 'json',\r\n    params: {\r\n        request: null,\r\n\r\n    }\r\n};\r\n\r\n//request types\r\nconst SUBINDEXYEARCLOSEPOINT = \"SUBINDEXYEARCLOSEPOINT\";\r\n \r\n\r\nexport const subIndexYearClosePoint = { ...config, params: { ...config.params, request: SUBINDEXYEARCLOSEPOINT } };\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport \"./SimpleAutoComplete.css\";\r\nfunction escapeRegexCharacters(str) {\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.code;\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n  return (\r\n    <span>{suggestion.code}</span>\r\n  );\r\n}\r\n\r\nclass SimpleAutoComplete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: '',\r\n      suggestions: []\r\n    };    \r\n  }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n    \r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n  \r\n    const regex = new RegExp('^' + escapedValue, 'i');\r\n    console.log(\"choices\",this.props.choices);\r\n  \r\n    return this.props.choices.filter(choice => regex.test(choice.code));\r\n  }\r\n  \r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  onSuggestionSelected = (event,{ suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    this.props.itemSelected(suggestion.code);\r\n  }\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: this.props.placeholder,\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <Autosuggest \r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        onSuggestionSelected = {this.onSuggestionSelected}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps} />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SimpleAutoComplete;","import { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\r\nimport axios from \"axios\";\r\nimport React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Card, CardBody, CardFooter, CardTitle, Col, Progress, Row } from 'reactstrap';\r\nimport { subIndexYearClosePoint } from \"../../api/chart\";\r\nimport { subIndexYearTurnover } from \"../../api/symbol\";\r\nimport SimpleAutoComplete from \"../autocomplete/SimpleAutoComplete\";\r\n\r\n\r\nconst lineColor = [getStyle('--danger'),\r\ngetStyle('--primary'),\r\ngetStyle('--success'),\r\ngetStyle('--warning'),\r\ngetStyle('--purple'),\r\ngetStyle('--pink'),\r\ngetStyle('--teal'),\r\ngetStyle('--cyan'),\r\ngetStyle('--orange'),\r\ngetStyle('--info'),\r\ngetStyle('--light'),\r\ngetStyle('--dark'),\r\ngetStyle('--indigo'),\r\ngetStyle('--purple'),\r\ngetStyle('--success'),];\r\n\r\nconst chartOpts = {\r\n  tooltips: {\r\n    enabled: true,\r\n    intersect: true,\r\n    mode: 'index',\r\n    position: 'nearest',\r\n  },\r\n  legend: {\r\n    labels: {\r\n      boxWidth: 5\r\n    }\r\n  },\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 1000\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: 'time',\r\n        time: {\r\n          unit: 'day'\r\n        },\r\n        ticks: {\r\n          autoSkip: true\r\n        }\r\n      }\r\n\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nclass ComparisonChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.removeSymbol = this.removeSymbol.bind(this);\r\n    this.addSymbol = this.addSymbol.bind(this);\r\n    this.state = {\r\n      addSymbol: [],\r\n      removeSymbol: [],\r\n      turnover: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.all([axios(subIndexYearClosePoint), axios(subIndexYearTurnover)]\r\n    ).then(axios.spread((close, fullTurnover) => {\r\n      const turnover = fullTurnover.data[0];\r\n      const topTurnovers = turnover.filter(turnover =>\r\n        turnover.symbol !== \"FLOAT\" && turnover.symbol !== \"SENSITIVE\" && turnover.symbol != \"SENFLOAT\"\r\n      ).sort((a, b) => b.turnover - a.turnover).slice(0, 5);\r\n      const addedSymbols = topTurnovers.map(turnover => ({ code: turnover.symbol }));\r\n      const addedSymbolsArray = addedSymbols.map(symbol => symbol.code);\r\n      const removedSymbols = turnover.filter(turnover => !addedSymbolsArray.includes(turnover.symbol)).map(turnover => ({ code: turnover.symbol }));\r\n      this.setState({ chartData: close.data, turnover: fullTurnover.data, addSymbol: removedSymbols, removeSymbol: addedSymbols })\r\n    }));\r\n  }\r\n\r\n  addSymbol(companyCode) {\r\n    const newAddSymbols = this.state.addSymbol.filter(dataset =>\r\n      dataset.code !== companyCode);\r\n    const newRemoveSymbols = this.state.removeSymbol.concat([{ code: companyCode }]);\r\n    this.setState({ addSymbol: newAddSymbols, removeSymbol: newRemoveSymbols, animationDuration: 1000 });\r\n  }\r\n\r\n  removeSymbol(companyCode) {\r\n    const newRemoveSymbols = this.state.removeSymbol.filter(dataset =>\r\n      dataset.code !== companyCode);\r\n    const newAddSymbols = this.state.addSymbol.concat([{ code: companyCode }]);\r\n    this.setState({ addSymbol: newAddSymbols, removeSymbol: newRemoveSymbols });\r\n  }\r\n\r\n  render() {\r\n    let turnover, footer, totalTurnover = 0;\r\n    if (this.state.turnover.length > 0) {\r\n      turnover = this.state.turnover[0];\r\n      totalTurnover = turnover.filter(turnover => turnover.symbol === \"NEPSE\")[0].turnover;\r\n      footer = this.state.removeSymbol.map(symbol =>\r\n        <Col key={symbol.code} sm={12} md className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n          <div className=\"text-muted\">{symbol.code}</div>\r\n          <strong>{parseInt(turnover.filter(turnover => turnover.symbol === symbol.code)[0].turnover).toLocaleString()} ({((turnover.filter(turnover => turnover.symbol === symbol.code)[0].turnover / totalTurnover) * 100).toFixed(2)}%) </strong>\r\n          <Progress className=\"progress-xs mt-2\" color=\"info\" value={((turnover.filter(turnover => turnover.symbol === symbol.code)[0].turnover / totalTurnover) * 100).toFixed(2)} />\r\n        </Col>)\r\n    }\r\n    const chartData = this.state.removeSymbol.map((symbol, index) => (\r\n      {\r\n        label: symbol.code,\r\n        backgroundColor: symbol.code == 'NEPSE' ? hexToRgba(getStyle('--danger'), 10) : hexToRgba(getStyle('--danger'), 0),\r\n        borderColor: hexToRgba(lineColor[index], 100),\r\n        pointHoverBackgroundColor: '#fff',\r\n        borderWidth: 2,\r\n        data: this.state.chartData[symbol.code].data,\r\n        borderDash: symbol.code === \"NEPSE\" ? [2, 2] : [],\r\n      }));\r\n\r\n    return (\r\n      <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col sm=\"2\">\r\n              <CardTitle className=\"mb-0\"><strong>Yearly Top Indexes</strong></CardTitle>\r\n            </Col>\r\n            <Col sm=\"5\" className=\"float-left\" >\r\n              <SimpleAutoComplete choices={this.state.addSymbol} itemSelected={this.addSymbol} placeholder=\"Add Index\" />\r\n            </Col>\r\n            <Col sm=\"5\" className=\"float-right\">\r\n              <SimpleAutoComplete choices={this.state.removeSymbol} itemSelected={this.removeSymbol} placeholder=\"Remove Index\" />\r\n            </Col>\r\n            <Col sm=\"4\" className=\"d-none d-sm-inline-block\" className=\"float-right\">\r\n            </Col>\r\n          </Row>\r\n          <div className=\"chart-wrapper\" style={{ height: 300 + 'px', marginTop: 40 + 'px' }}>\r\n            <Line data={{ datasets: chartData }} options={chartOpts} height={1300} />\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <Row className=\"text-center\">\r\n            {footer}\r\n          </Row>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComparisonChart;","import { getStyle } from '@coreui/coreui/dist/js/coreui-utilities';\r\nimport axios from 'axios';\r\nimport React, { useState, useContext, useEffect, Suspense } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Card, CardBody, CardHeader, Col, Progress, Row, Table, Fade } from 'reactstrap';\r\nimport { marketCloseInformationApi, marketInformationApi, marketSummaryApi, topStocksApi } from \"../../api/live\";\r\nimport { nepseWeekMonthYearApi } from '../../api/symbol';\r\nimport ComparisonChart from '../../components/charts/ComparisonChart';\r\nimport { MarketContext } from '../../context/contexts';\r\n\r\nconst barChartOptions = {\r\n  scaleShowValues: true,\r\n  scales: {\r\n    yAxes: [{\r\n      ticks: {\r\n        beginAtZero: true\r\n      }\r\n    }],\r\n    xAxes: [{\r\n      ticks: {\r\n        autoSkip: false\r\n      }\r\n    }]\r\n  }\r\n}\r\n\r\nfunction Dashboard(props) {\r\n\r\n\r\n  const [fadeIn, setFadein] = useState(true);\r\n  const [tableType, setTableType] = useState('top-gainers');\r\n  const [chartType, setChartType] = useState('subIndex');\r\n  const [topStocks, setTopStocks] = useState();\r\n  const [marketSummary, setMarketSummary] = useState({\r\n    gainers: null,\r\n    losers: null,\r\n    turnover: null,\r\n    transactions: null,\r\n    shares: null,\r\n    scripts: null\r\n\r\n  });\r\n  const [marketInformation, setMarketInformation] = useState();\r\n  const [marketCloseInformation, setMarketCloseInformation] = useState();\r\n  const [nepseWeekMonthYear, setNepseWeekMonthYear] = useState({\r\n    week: null,\r\n    month: null,\r\n    year: null\r\n  });\r\n\r\n  const {market} = useContext(MarketContext);\r\n\r\n  const makeNetworkRequest = () => {\r\n    console.log(\"network request initiate\");\r\n    axios.all([axios(topStocksApi), axios(marketSummaryApi), axios(marketInformationApi), axios(marketCloseInformationApi), axios(nepseWeekMonthYearApi)])\r\n      .then(axios.spread((topStocks, marketSummary, marketInformation, marketCloseInformation, nepseWeekMonthYear) => {\r\n        setTopStocks(topStocks.data);\r\n        setMarketSummary(marketSummary.data);\r\n        setMarketInformation(marketInformation.data);\r\n        setMarketCloseInformation(marketCloseInformation.data);\r\n        setNepseWeekMonthYear(nepseWeekMonthYear.data);\r\n      }))\r\n    console.log(\"network request end\");\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onTableChangeClick = e => {\r\n    e.preventDefault();\r\n    setTableType(e.target.id);\r\n  }\r\n\r\n  const onChartTypeChangeClick = e => {\r\n    e.preventDefault();\r\n    setChartType(e.target.id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    makeNetworkRequest();\r\n    if (market == \"Live\") {\r\n      let intervalId = -1;\r\n      intervalId = setInterval(makeNetworkRequest, 30000);\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      }\r\n    }\r\n  }, [market]);\r\n\r\n  useEffect(() => {\r\n    if (market == \"Live\") {\r\n      let toggleId = -1;\r\n      toggleId = setInterval(() => {\r\n        setFadein(!fadeIn)\r\n      }, 600);\r\n      return () => {\r\n        clearInterval(toggleId);\r\n      }\r\n    } else {\r\n      setFadein(true);\r\n    }\r\n  });\r\n\r\n  const loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  let tableHead, tableBody, datasetIndex, cards, gain, nepseGain = 0;\r\n  let subIndexLabel = [], subIndexData = [], indexLabel = [], indexData = [], subIndexbackgroundColor = [], indexbackgroundColor = [];\r\n  let subindexList = [], indexList = [];\r\n  let subIndexChartLabelData, indexChartLabelData;\r\n  let cardHeaderClass, textClass, badgeColor, directionIcon;\r\n\r\n  if (topStocks) {\r\n    datasetIndex = topStocks.tableType.indexOf(tableType);\r\n    tableHead = topStocks.heading[datasetIndex].map(head =>\r\n      <th key={head}><h5>{head}</h5></th>\r\n    );\r\n\r\n    tableBody = topStocks.data[datasetIndex].map((data, index) =>\r\n      <tr key={data[0]}>\r\n        {\r\n          data.map(tableData =>\r\n            <td key={tableData}><b>{tableData}</b></td>\r\n          )\r\n        }\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  if (marketInformation && marketCloseInformation) {\r\n    nepseGain = parseFloat(marketInformation.NEPSE[2].replace(/\\,/g, '')) - parseFloat(marketCloseInformation.NEPSE[2].replace(/\\,/g, ''));\r\n\r\n    if (nepseGain > 0) {\r\n      cardHeaderClass = \"brand-card-header bg-success\";\r\n      textClass = \"text-success\";\r\n      badgeColor = \"success\"\r\n\r\n\r\n    } else if (nepseGain < 0) {\r\n      cardHeaderClass = \"brand-card-header bg-danger\";\r\n      textClass = \"text-danger\";\r\n      badgeColor = \"danger\"\r\n    } else {\r\n      cardHeaderClass = \"brand-card-header bg-primary\";\r\n      textClass = \"text-primary\";\r\n      badgeColor = \"primary\";\r\n    }\r\n\r\n    Object.keys(marketInformation).map((subIndex) => {\r\n\r\n      if (![\"tradeTime\", \"tradeStartsIn\"].includes(subIndex)) {\r\n        gain = parseFloat(marketInformation[subIndex][2].replace(/\\,/g, '')) - parseFloat(marketCloseInformation[subIndex][2].replace(/\\,/g, ''));\r\n        if (![\"NEPSE\", \"FLOAT\", \"SENSITIVE\", \"SENFLOAT\"].includes(subIndex)) {\r\n          subIndexLabel.push(subIndex);\r\n          subIndexData.push(marketInformation[subIndex][1].replace(/\\,/g, ''));\r\n          subIndexbackgroundColor.push(getStyle('--primary'));\r\n        } else {\r\n          indexLabel.push(subIndex);\r\n          indexData.push(marketInformation[subIndex][1].replace(/\\,/g, ''));\r\n          indexbackgroundColor.push(getStyle('--primary'));\r\n        }\r\n\r\n        if (![\"NEPSE\", \"FLOAT\", \"SENSITIVE\", \"SENFLOAT\"].includes(subIndex)) {\r\n          subindexList.push(<div key={subIndex} className=\"progress-group\">\r\n            <div className=\"progress-group-header\">\r\n              <span className=\"title\">{subIndex} <span className={gain >= 0 ? \"text-success ml-auto font-weight-bold\" : \"text-danger ml-auto font-weight-bold\"}>{marketInformation[subIndex][2]} | {gain >= 0 ? \"+\" : \"-\"}{marketInformation[subIndex][3]}</span><small className={gain >= 0 ? \"text-success\" : \"text-danger\"}>({marketInformation[subIndex][4]}%)</small></span>\r\n              <span className=\"ml-auto font-weight-bold\">{marketInformation[subIndex][1]} </span>\r\n            </div>\r\n            <div className=\"progress-group-bars\">\r\n              <Progress className=\"progress-xs\" color={gain >= 0 ? \"success\" : \"danger\"} value={marketInformation[subIndex][4] * 10} />\r\n            </div>\r\n          </div>)\r\n        } else {\r\n          if (subIndex !== \"tradeTime\")\r\n            indexList.push(<div key={subIndex} className=\"progress-group\">\r\n              <div className=\"progress-group-header\">\r\n                <span className=\"title\">{subIndex} <span className={gain >= 0 ? \"text-success ml-auto font-weight-bold\" : \"text-danger ml-auto font-weight-bold\"}>{marketInformation[subIndex][2]} | {gain >= 0 ? \"+\" : \"-\"}{marketInformation[subIndex][3]}</span><small className={gain >= 0 ? \"text-success\" : \"text-danger\"}>({marketInformation[subIndex][4]}%)</small></span>\r\n                <span className=\"ml-auto font-weight-bold\">{marketInformation[subIndex][1]} </span>\r\n              </div>\r\n              <div className=\"progress-group-bars\">\r\n                <Progress className=\"progress-xs\" color={gain >= 0 ? \"success\" : \"danger\"} value={marketInformation[subIndex][4] * 10} />\r\n              </div>\r\n            </div>)\r\n        }\r\n      }\r\n    });\r\n    subIndexChartLabelData = { labels: subIndexLabel, datasets: [{ data: subIndexData, backgroundColor: subIndexbackgroundColor, label: \"Volume\" }] };\r\n    indexChartLabelData = { labels: indexLabel, datasets: [{ data: indexData, backgroundColor: indexbackgroundColor, label: \"Volume\" }] };\r\n\r\n\r\n  }\r\n\r\n  if (nepseWeekMonthYear.week) {\r\n\r\n    const currentIndex = parseFloat(marketInformation.NEPSE[2].replace(/\\,/g, ''));\r\n    let weekCardClassname, monthCardClassName, yearCardClassName, weekText, monthText, yearText;\r\n\r\n    if (currentIndex > parseFloat(nepseWeekMonthYear.week.maximum)) {\r\n      weekCardClassname = \"text-white bg-success\";\r\n      weekText = \"above\";\r\n    } else if (currentIndex < parseFloat(nepseWeekMonthYear.week.minimum)) {\r\n      weekCardClassname = \"text-white bg-danger\";\r\n      weekText = \"below\";\r\n    } else {\r\n      weekCardClassname = \"text-white bg-primary\";\r\n      weekText = \"within\";\r\n    }\r\n\r\n    if (currentIndex > parseFloat(nepseWeekMonthYear.month.maximum)) {\r\n      monthCardClassName = \"text-white bg-success\";\r\n      monthText = \"above\";\r\n    } else if (currentIndex < parseFloat(nepseWeekMonthYear.month.minimum)) {\r\n      monthCardClassName = \"text-white bg-danger\";\r\n      monthText = \"below\";\r\n    } else {\r\n      monthCardClassName = \"text-white bg-primary\";\r\n      monthText = \"within\";\r\n    }\r\n\r\n    if (currentIndex > parseFloat(nepseWeekMonthYear.year.maximum)) {\r\n      yearCardClassName = \"text-white bg-success\";\r\n      yearText = \"above\";\r\n    } else if (currentIndex < parseFloat(nepseWeekMonthYear.year.minimum)) {\r\n      yearCardClassName = \"text-white bg-danger\";\r\n      yearText = \"below\";\r\n    } else {\r\n      yearCardClassName = \"text-white bg-primary\";\r\n      yearText = \"within\";\r\n    }\r\n\r\n\r\n    cards = <Row>\r\n      <Col className=\"mb-4\" xs=\"12\" sm=\"6\" lg=\"3\">\r\n        <Suspense fallback={loading()}>\r\n          <div>\r\n            <div className=\"brand-card\">\r\n              <div className={cardHeaderClass}>\r\n                <div className=\"text-center\">\r\n                  <Fade in={fadeIn}><small>{marketInformation.tradeTime}</small></Fade>\r\n                  <h1>{marketInformation.NEPSE[2]}</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"brand-card-body\">\r\n                <div>\r\n                  <strong className={textClass}> {(nepseGain >= 0 ? 1 : -1) * marketInformation.NEPSE[3]} </strong>\r\n                  <small className={textClass}>({marketInformation.NEPSE[4]}%)</small>\r\n                  <div className=\"text-muted\">Change</div>\r\n                </div>\r\n                <div>\r\n                  <small>{marketSummary.turnover}</small>\r\n                  <div className=\"text-muted\">Turnover</div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Suspense>\r\n      </Col>\r\n\r\n      <Col className=\"mb-4\" xs=\"12\" sm=\"6\" lg=\"3\">\r\n        <Card>\r\n          <CardHeader className=\"bg-gray-500 text-white\"><div>Weekly Summary</div>\r\n            <small className=\"text-muted\">Nepse is {weekText} weekly range.</small>\r\n          </CardHeader>\r\n          <CardBody className={weekCardClassname}>\r\n            <div>Maximum | <small>{parseFloat(nepseWeekMonthYear.week.maximum).toLocaleString()}</small></div>\r\n            <div>Minimum | <small>{parseFloat(nepseWeekMonthYear.week.minimum).toLocaleString()}</small></div>\r\n            <div>Avg. Volume | <small>{parseFloat(nepseWeekMonthYear.week.avgVolume).toLocaleString()}</small></div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col className=\"mb-4\" xs=\"12\" sm=\"6\" lg=\"3\">\r\n        <Card className=\"h-90\">\r\n          <CardHeader className=\"bg-gray-600 text-white\">\r\n            <div>Monthly Summary </div>\r\n            <small className=\"text-muted\">Nepse is {monthText} monthly range.</small>\r\n          </CardHeader>\r\n          <CardBody className={monthCardClassName}>\r\n            <div>Maximum | <small>{parseFloat(nepseWeekMonthYear.month.maximum).toLocaleString()}</small></div>\r\n            <div>Minimum | <small>{parseFloat(nepseWeekMonthYear.month.minimum).toLocaleString()}</small></div>\r\n            <div>Avg. Volume | <small>{parseFloat(nepseWeekMonthYear.month.avgVolume).toLocaleString()}</small></div>\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col className=\"mb-4\" xs=\"12\" sm=\"6\" lg=\"3\">\r\n        <Card className=\"h-75\">\r\n          <CardHeader className=\"bg-gray-700 text-white\">\r\n            <div>Yearly Summary</div>\r\n            <small className=\"text-muted\">Nepse is {yearText} yearly range.</small>\r\n          </CardHeader>\r\n          <CardBody className={yearCardClassName}>\r\n            <div>Maximum | <small>{parseFloat(nepseWeekMonthYear.year.maximum).toLocaleString()}</small></div>\r\n            <div>Minimum | <small>{parseFloat(nepseWeekMonthYear.year.minimum).toLocaleString()}</small></div>\r\n            <div>Avg. Volume | <small>{parseFloat(nepseWeekMonthYear.year.avgVolume).toLocaleString()}</small></div>\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      {cards}\r\n      <Row>\r\n        <Col className=\"px-0\">\r\n          <div className=\"chart-wrapper d-none d-lg-block\">\r\n            <ComparisonChart />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"mb-4\" xs=\"12\" sm=\"6\" lg=\"6\">\r\n          <Card className=\"h-100\">\r\n            <CardHeader className=\"bg-info\">\r\n              Sub Indexes\r\n              </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col xs=\"12\" md=\"12\" xl=\"12\">\r\n                  {subindexList}\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" lg=\"6\">\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <CardHeader className=\"bg-info\">\r\n                  Indexes\r\n              </CardHeader>\r\n                <CardBody>\r\n                  {indexList}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <CardHeader className=\"bg-info\">\r\n              Volume\r\n              </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm=\"6\" >\r\n                  <div className={chartType == \"subIndex\" ? \"callout callout-info alert alert-info\" : \"callout callout-info\"}>\r\n                    <a id=\"subIndex\" href=\"#\" onClick={onChartTypeChangeClick}>Sub Indexes</a>\r\n                  </div>\r\n                </Col>\r\n                <Col sm=\"6\" >\r\n                  <div className={chartType == \"index\" ? \"callout callout-info alert alert-info\" : \"callout callout-info\"}>\r\n                    <a id=\"index\" href=\"#\" onClick={onChartTypeChangeClick}>Indexes</a>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {chartType == 'subIndex' ? <Bar type='horizontalBar' data={subIndexChartLabelData} options={barChartOptions} /> : <Bar data={indexChartLabelData} options={barChartOptions} />}\r\n              </Row>\r\n\r\n            </CardBody>\r\n\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader className=\"bg-info\">\r\n              Market Highlights\r\n              </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col lg=\"2\" md=\"4\" sm=\"6\" >\r\n\r\n                  <div className={tableType == \"top-gainers\" ? \"callout callout-success alert alert-success\" : \"callout callout-success\"}>\r\n                    <small className=\"text-muted\"><a href=\"#\" id=\"top-gainers\" onClick={onTableChangeClick}>Gainers</a></small>\r\n                    <br />\r\n                    <strong className=\"h5\"> {marketSummary.gainers}</strong>\r\n                  </div>\r\n\r\n\r\n                </Col>\r\n                <Col lg=\"2\" md=\"4\" sm=\"6\">\r\n                  <div className={tableType == \"top-losers\" ? \"callout callout-danger alert alert-danger\" : \"callout callout-danger\"}>\r\n                    <small className=\"text-muted\"><a id=\"top-losers\" href=\"#\" onClick={onTableChangeClick}>Losers</a></small>\r\n                    <br />\r\n                    <strong className=\"h5\">{marketSummary.losers}</strong>\r\n\r\n                  </div>\r\n\r\n                </Col>\r\n                <Col lg=\"2\" md=\"4\" sm=\"6\">\r\n                  <div className={tableType == \"top-by-turnover\" ? \"callout callout-primary alert alert-info\" : \"callout callout-primary\"}>\r\n                    <small className=\"text-muted\"><a id=\"top-by-turnover\" href=\"#\" onClick={onTableChangeClick}>Turnover</a></small>\r\n                    <br />\r\n                    <strong className=\"h5\">{marketSummary.turnover}</strong>\r\n\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col lg=\"2\" md=\"4\" sm=\"6\">\r\n                  <div className={tableType == \"top-by-transaction\" ? \"callout callout-primary alert alert-info\" : \"callout callout-primary\"}>\r\n                    <small className=\"text-muted\"><a id=\"top-by-transaction\" href=\"#\" onClick={onTableChangeClick}>Transaction</a></small>\r\n                    <br />\r\n                    <strong className=\"h5\">{marketSummary.transactions}</strong>\r\n\r\n                  </div>\r\n\r\n                </Col>\r\n                <Col lg=\"2\" md=\"4\" sm=\"6\">\r\n                  <div className={tableType == \"top-by-shares\" ? \"callout callout-primary alert alert-info\" : \"callout callout-primary\"}>\r\n                    <small className=\"text-muted\"><a id=\"top-by-shares\" href=\"#\" onClick={onTableChangeClick}>Shares</a></small>\r\n                    <br />\r\n                    <strong className=\"h5\">{marketSummary.shares}</strong>\r\n\r\n                  </div>\r\n\r\n                </Col>\r\n                <Col lg=\"2\" md=\"4\" sm=\"6\">\r\n                  <div className=\"callout callout-dark\">\r\n                    <small className=\"text-muted\">Scripts</small>\r\n                    <br />\r\n                    <strong className=\"h5\">{marketSummary.scripts}</strong>\r\n\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <br />\r\n\r\n\r\n\r\n              <Table hover bordered responsive size=\"sm\">\r\n                <thead className=\"bg-primary\">\r\n                  <tr>\r\n                    {tableHead}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tableBody}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}