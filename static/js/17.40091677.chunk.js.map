{"version":3,"sources":["api/symbol.js","views/Portfolio/Portfolio.js"],"names":["config","method","baseURL","symbolRequestHandler","responseType","params","request","range","subIndexYearTurnover","Object","C_Users_Prasanna_Documents_NC_NCW_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","nepseWeekMonthYearApi","companyInfo","symbol","companyFinancial","companyCurrent","companyPrevious","contractNumber","companyReturn","Portfolio","_useState","useState","_useState2","C_Users_Prasanna_Documents_NC_NCW_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","portfolioName","setPortfolioName","_useState3","_useState4","newPortfolioName","setNewPortfolioName","_useState5","_useState6","editingPorfolioName","setEditingPortfolioName","_useState7","_useState8","boughtTransactions","setBoughtTransactions","_useState9","_useState10","soldTransactions","setSoldTransactions","_useState11","_useState12","transactionHistory","setTransactionHistory","_useState13","_useState14","heldScripts","setHeldScripts","_useState15","_useState16","effectiveBoughtPrices","setEffectiveBoughtPrices","_useState17","_useState18","effectiveSoldPrices","setEffectiveSoldPrices","_useState19","_useState20","rate","setRate","_useState21","_useState22","effectiveRate","setEffectiveRate","_useState23","_useState24","averageBuyRate","setAverageBuyRate","_useState25","_useState26","previousRate","setPreviousRate","_useState27","_useState28","historyTable","setHistoryTable","_useState29","_useState30","needTransactions","setNeedTransactions","_useState31","_useState32","transactionId","setTransactionId","_useState33","_useState34","setSymbol","_useState35","_useState36","type","setType","_useState37","_useState38","quantity","setQuantity","_useState39","_useState40","price","setPrice","_useState41","format","Date","_useState42","date","setDate","_useState43","_useState44","contractType","setContractType","_useState45","_useState46","manualType","setManualType","_useState47","_useState48","editingTransaction","setEditingTransaction","_useState49","_useState50","dpCharges","setDpCharges","_useState51","_useState52","editDate","setEditDate","_useState53","_useState54","pieBackground","setPieBackground","_useState55","_useState56","buttonDropdown","setButtonDropdown","_useState57","_useState58","upgrade","setUpgrade","_useState59","_useState60","unupgradedScripts","setUnupgradedScripts","_useState61","_useState62","upgradedScripts","setUpgradedScripts","_useContext","useContext","UserContext","uid","emailVerified","market","MarketContext","firestore","firebase","useEffect","unsubscribePortfolio","collection","doc","onSnapshot","exists","data","name","transactions","buy","sell","upgradePortfolio","keys","length","bodyFormData","FormData","set","companyCurrentPostRequest","C_Users_Prasanna_Documents_NC_NCW_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","companyPreviousPostRequest","axios","all","then","spread","companyCurrentValue","companyPreviousValue","intervalId","setInterval","reduce","acc","value","closeIndex","clearInterval","pureBuyPrice","brokerCommission","effBoughtPrices","backgroundColor","map","companyCode","transaction","push","Math","floor","random","totalScripts","tempAvg","total","averageBuy","buyPrice","index","pureSellPrice","effSoldPrices","effRate","hasOwnProperty","totalSellPrice","totalBuyPrice","tempHistoryTable","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","size","bordered","responsive","key","className","toLocaleString","parseFloat","toFixed","tempHeldScripts","boughtScripts","soldScripts","totalBuy","totalSell","tempDpCharges","unfilteredArray","filteredArray","concat","filter","boughtDate","C_Users_Prasanna_Documents_NC_NCW_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Set","unsubscribeTransactions","cleanStates","processContractNumber","contractAction","contractNumberGetRequest","substring","RATE","QUANTITY","SYMBOL","buyStock","transactionsRef","buyType","update","C_Users_Prasanna_Documents_NC_NCW_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","FieldValue","arrayUnion","id","parse","sellStock","_firebase$firestore$F","_firebase$firestore$F2","_batch$update","_batch$update2","historyRef","batch","historySoldTransaction","apply","delete","commit","alert","editTransaction","editTransactionId","editQuantity","transactionType","editMode","newbuyTransactions","window","confirm","_batch$update4","_firebase$firestore$F3","_firebase$firestore$F4","_batch$update3","newSellTransactions","_firebase$firestore$F5","_firebase$firestore$F6","_batch$update5","_batch$update6","oldBuyTransactions","oldSellTransactions","get","portfolio","oldSoldScripts","includes","response","catch","error","Fragment","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onChange","e","target","title","onClick","preventDefault","JSON","stringify","sort","reactstrap__WEBPACK_IMPORTED_MODULE_16__","color","gainToday","reactstrap__WEBPACK_IMPORTED_MODULE_17__","sm","totalInvestment","react_chartjs_2__WEBPACK_IMPORTED_MODULE_7__","labels","datasets","options","display","text","position","legend","boxWidth","xs","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","onSubmit","inline","md","placeholder","String","trim","required","outline","round","now","hover","averagePrice","reactstrap__WEBPACK_IMPORTED_MODULE_20__","multi","bar","reactstrap__WEBPACK_IMPORTED_MODULE_21__","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_22__","_components_spinner_Spinner__WEBPACK_IMPORTED_MODULE_35__","reactstrap__WEBPACK_IMPORTED_MODULE_23__","reactstrap__WEBPACK_IMPORTED_MODULE_24__","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_25__","parseInt","row","reactstrap__WEBPACK_IMPORTED_MODULE_26__","reactstrap__WEBPACK_IMPORTED_MODULE_27__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_28__","_components_autocomplete_CompanyAutoSuggest__WEBPACK_IMPORTED_MODULE_34__","onSuggestionSelected","reactstrap__WEBPACK_IMPORTED_MODULE_29__","reactstrap__WEBPACK_IMPORTED_MODULE_30__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_31__","right","reactstrap__WEBPACK_IMPORTED_MODULE_32__","innerText","_firestore$collection","striped","onFocus","direction","document","URL","match","auth","signOut"],"mappings":"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","file":"static/js/17.40091677.chunk.js","sourcesContent":["import { symbolRequestHandler } from \"./urls\";\r\n\r\nconst config = {\r\n    method: 'get',\r\n    baseURL: symbolRequestHandler,\r\n    responseType: 'json',\r\n    params: {\r\n        request: null,\r\n        range: null\r\n    }\r\n};\r\n\r\n//Request For subindex.php\r\nconst SUBINDEXYEARTURNOVER = \"SUBINDEXYEARTURNOVER\";\r\nconst SUBINDEXCURRENT = \"SUBINDEXCURRENT\";\r\nconst SUBINDEXOPEN = \"SUBINDEXOPEN\";\r\nconst NEPSEWEEKMONTHYEAR = \"NEPSEWEEKMONTHYEAR\";\r\nconst COMPANYINFO = \"COMPANYINFO\";\r\nconst COMPANYFINANCIAL = \"COMPANYFINANCIAL\";\r\nconst COMPANYCURRENT = \"COMPANYCURRENT\";\r\nconst COMPANYPREVIOUS = \"COMPANYPREVIOUS\";\r\nconst CONTRACTNUMBER = \"CONTRACTNUMBER\";\r\nconst COMPANYRETURN = \"COMPANYRETURN\";\r\n\r\nexport const subIndexCurent = { ...config, params: { ...config.params, request: SUBINDEXCURRENT } };\r\nexport const subIndexOpen = { ...config, params: { ...config.params, request: SUBINDEXOPEN } };\r\nexport const subIndexYearTurnover = { ...config, params: { ...config.params, request: SUBINDEXYEARTURNOVER } };\r\nexport const nepseWeekMonthYearApi = { ...config, params: { ...config.params, request: NEPSEWEEKMONTHYEAR } };\r\nexport const companyInfo = { ...config, params: { ...config.params, request: COMPANYINFO, symbol: 'ADBL' } };\r\nexport const companyFinancial = { ...config, params: { ...config.params, request: COMPANYFINANCIAL, symbol: 'ADBL' } };\r\nexport const companyCurrent = { ...config, method: 'post', params: { ...config.params, request: COMPANYCURRENT } };\r\nexport const companyPrevious = { ...config, method: 'post', params: { ...config.params, request: COMPANYPREVIOUS } };\r\nexport const contractNumber = { ...config, params: { ...config.params, request: CONTRACTNUMBER } };\r\nexport const companyReturn = { ...config, params: { ...config.params, request: COMPANYRETURN, symbol: 'ADBL' } };","import axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Badge, ButtonDropdown, Card, CardBody, CardFooter, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Modal, ModalBody, ModalFooter, ModalHeader, Progress, Row, Table, FormText } from 'reactstrap';\r\nimport { companyCurrent, companyPrevious, contractNumber } from '../../api/symbol';\r\nimport CompanyAutoSuggest from '../../components/autocomplete/CompanyAutoSuggest';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport { UserContext, MarketContext } from '../../context/contexts';\r\nimport firebase from '../../firebase/Firebase';\r\n\r\n\r\nfunction Portfolio() {\r\n  const [portfolioName, setPortfolioName] = useState();\r\n  const [newPortfolioName, setNewPortfolioName] = useState();\r\n  const [editingPorfolioName, setEditingPortfolioName] = useState(false);\r\n  const [boughtTransactions, setBoughtTransactions] = useState({});\r\n  const [soldTransactions, setSoldTransactions] = useState({});\r\n  const [transactionHistory, setTransactionHistory] = useState({});\r\n  const [heldScripts, setHeldScripts] = useState({});\r\n  const [effectiveBoughtPrices, setEffectiveBoughtPrices] = useState({});\r\n  const [effectiveSoldPrices, setEffectiveSoldPrices] = useState({});\r\n  const [rate, setRate] = useState({});\r\n  const [effectiveRate, setEffectiveRate] = useState({});\r\n  const [averageBuyRate, setAverageBuyRate] = useState({});\r\n  const [previousRate, setPreviousRate] = useState({});\r\n  const [historyTable, setHistoryTable] = useState();\r\n  const [needTransactions, setNeedTransactions] = useState(false);\r\n\r\n\r\n  const [transactionId, setTransactionId] = useState();\r\n  const [symbol, setSymbol] = useState('');\r\n  const [type, setType] = useState('Select Type');\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [date, setDate] = useState(format(new Date(), 'MM/DD/YYYY'));\r\n  const [contractType, setContractType] = useState(null);\r\n  const [manualType, setManualType] = useState(null);\r\n  const [editingTransaction, setEditingTransaction] = useState(false);\r\n  const [dpCharges, setDpCharges] = useState({});\r\n  const [editDate, setEditDate] = useState(false);\r\n\r\n  const [pieBackground, setPieBackground] = useState([]);\r\n  const [buttonDropdown, setButtonDropdown] = useState(false);\r\n  const [upgrade, setUpgrade] = useState(false);\r\n\r\n  const [unupgradedScripts, setUnupgradedScripts] = useState([]);\r\n  const [upgradedScripts, setUpgradedScripts] = useState([]);\r\n\r\n  const { uid, emailVerified } = useContext(UserContext);\r\n  const market = useContext(MarketContext);\r\n\r\n  const firestore = firebase.firestore();\r\n  const dpCharge = 25;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (uid) {\r\n      const scriptsDocRef = firestore.collection(\"portfolios\").doc(uid);\r\n      const unsubscribePortfolio = scriptsDocRef\r\n        .onSnapshot((doc) => {\r\n          if (doc.exists) {\r\n            setPortfolioName(doc.data().name)\r\n            setBoughtTransactions(doc.data().transactions.buy);\r\n            setSoldTransactions(doc.data().transactions.sell);\r\n          } else {\r\n            upgradePortfolio();\r\n          }\r\n\r\n        });\r\n      return () => {\r\n        unsubscribePortfolio();\r\n      }\r\n    }\r\n\r\n  }, [uid]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (Object.keys(boughtTransactions).length > 0) {\r\n\r\n      let bodyFormData = new FormData();\r\n      bodyFormData.set(\"symbols\", Object.keys(boughtTransactions));\r\n      const companyCurrentPostRequest = { ...companyCurrent, data: bodyFormData };\r\n      const companyPreviousPostRequest = { ...companyPrevious, data: bodyFormData };\r\n\r\n      axios.all([axios(companyCurrentPostRequest), axios(companyPreviousPostRequest)])\r\n        .then(axios.spread((companyCurrentValue, companyPreviousValue) => {\r\n          setRate(companyCurrentValue.data);\r\n          setPreviousRate(companyPreviousValue.data);\r\n        }))\r\n\r\n\r\n      if (market == \"Live\") {\r\n\r\n        const intervalId = setInterval(() => {\r\n          axios(companyCurrentPostRequest)\r\n            .then((companyCurrentValue) => {\r\n              if (Object.keys(rate).length > 0) {\r\n                const changed = Object.keys(companyCurrentValue.data).reduce((acc, value) => {\r\n                  return acc || rate[value].closeIndex != companyCurrentValue.data[value].closeIndex\r\n                }, false);\r\n\r\n                if (changed) {\r\n                  setRate(companyCurrentValue.data);\r\n                }\r\n              } else {\r\n                setRate(companyCurrentValue.data);\r\n              }\r\n\r\n            });\r\n        }, 30000);\r\n\r\n        return () => {\r\n          clearInterval(intervalId);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }, [boughtTransactions]);\r\n\r\n  useEffect(() => {\r\n    let pureBuyPrice, brokerCommission;\r\n    const effBoughtPrices = {}, backgroundColor = [], sebonCommission = 0.015;\r\n    Object.keys(boughtTransactions).map(companyCode => {\r\n      effBoughtPrices[companyCode] = boughtTransactions[companyCode].map(transaction => {\r\n        pureBuyPrice = transaction.quantity * transaction.price;\r\n        if (pureBuyPrice <= 50000) {\r\n          brokerCommission = 0.6;\r\n        } else if (pureBuyPrice > 50000 && pureBuyPrice <= 500000) {\r\n          brokerCommission = 0.55;\r\n        } else if (pureBuyPrice > 500000 && pureBuyPrice <= 2000000) {\r\n          brokerCommission = 0.5;\r\n        } else if (pureBuyPrice > 2000000 && pureBuyPrice <= 10000000) {\r\n          brokerCommission = 0.45;\r\n        } else {\r\n          brokerCommission = 0.4;\r\n        }\r\n        return transaction.type == \"Secondary\" ? (transaction.price + (transaction.price * ((brokerCommission + sebonCommission) / 100))) : transaction.price;\r\n      })\r\n      backgroundColor.push('rgba(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',0.9)');\r\n\r\n\r\n    });\r\n\r\n    setEffectiveBoughtPrices(effBoughtPrices);\r\n    setPieBackground(backgroundColor);\r\n\r\n  }, [boughtTransactions]);\r\n\r\n\r\n  useEffect(() => {\r\n    const tempAvg = {};\r\n    let totalScripts;\r\n    Object.keys(heldScripts).map(companyCode => {\r\n      totalScripts = boughtTransactions[companyCode].reduce((total, transaction) => total + transaction.quantity, 0);\r\n      tempAvg[companyCode] = effectiveBoughtPrices[companyCode].reduce((averageBuy, buyPrice, index) => averageBuy + (boughtTransactions[companyCode][index].quantity * buyPrice) / totalScripts, 0)\r\n    });\r\n    setAverageBuyRate(tempAvg);\r\n  }, [effectiveBoughtPrices])\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const effSoldPrices = {};\r\n    let brokerCommission = 0, sebonCommission = 0.015, pureSellPrice;\r\n\r\n    Object.keys(soldTransactions).map(companyCode => {\r\n      effSoldPrices[companyCode] = soldTransactions[companyCode].map(transaction => {\r\n        pureSellPrice = transaction.quantity * transaction.price;\r\n        if (pureSellPrice <= 50000) {\r\n          brokerCommission = 0.6;\r\n        } else if (pureSellPrice > 50000 && pureSellPrice <= 500000) {\r\n          brokerCommission = 0.55;\r\n        } else if (pureSellPrice > 500000 && pureSellPrice <= 2000000) {\r\n          brokerCommission = 0.5;\r\n        } else if (pureSellPrice > 2000000 && pureSellPrice <= 10000000) {\r\n          brokerCommission = 0.45;\r\n        } else {\r\n          brokerCommission = 0.4;\r\n        }\r\n        return (transaction.price - (transaction.price * ((brokerCommission + sebonCommission) / 100)));\r\n      })\r\n\r\n      setEffectiveSoldPrices(effSoldPrices);\r\n\r\n    });\r\n  }, [soldTransactions]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (Object.keys(rate).length > 0) {\r\n      let pureSellPrice, effRate = {}, brokerCommission = 0, sebonCommission = 0.015;\r\n      Object.keys(boughtTransactions).map(companyCode => {\r\n\r\n        if (heldScripts.hasOwnProperty(companyCode) && rate.hasOwnProperty(companyCode)) {\r\n\r\n          pureSellPrice = heldScripts[companyCode] * rate[companyCode].closeIndex;\r\n\r\n          if (pureSellPrice <= 50000) {\r\n            brokerCommission = 0.6;\r\n          } else if (pureSellPrice > 50000 && pureSellPrice <= 500000) {\r\n            brokerCommission = 0.55;\r\n          } else if (pureSellPrice > 500000 && pureSellPrice <= 2000000) {\r\n            brokerCommission = 0.5;\r\n          } else if (pureSellPrice > 2000000 && pureSellPrice <= 10000000) {\r\n            brokerCommission = 0.45;\r\n          } else {\r\n            brokerCommission = 0.4;\r\n          }\r\n\r\n          effRate[companyCode] = rate[companyCode].closeIndex - (rate[companyCode].closeIndex * ((brokerCommission + sebonCommission) / 100));\r\n        }\r\n      })\r\n\r\n\r\n      setEffectiveRate(effRate);\r\n    }\r\n  }, [rate, heldScripts]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (Object.keys(transactionHistory).length > 0) {\r\n      let pureSellPrice, pureBuyPrice, totalSellPrice, totalBuyPrice, brokerCommission = 0, sebonCommission = 0.015;\r\n\r\n\r\n      const tempHistoryTable =\r\n        <Table size=\"sm\" bordered responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Symbol</th>\r\n              <th>Quantity</th>\r\n              <th>Bought</th>\r\n              <th>Sold</th>\r\n              <th>Return</th>\r\n              <th>Percent</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              Object.keys(transactionHistory.buy).map((companyCode) => {\r\n\r\n                totalBuyPrice = transactionHistory.buy[companyCode].reduce((total, transaction) => {\r\n                  pureBuyPrice = transaction.quantity * transaction.price\r\n                  if (pureBuyPrice <= 50000) {\r\n                    brokerCommission = 0.6;\r\n                  } else if (pureBuyPrice > 50000 && pureBuyPrice <= 500000) {\r\n                    brokerCommission = 0.55;\r\n                  } else if (pureBuyPrice > 500000 && pureBuyPrice <= 2000000) {\r\n                    brokerCommission = 0.5;\r\n                  } else if (pureBuyPrice > 2000000 && pureBuyPrice <= 10000000) {\r\n                    brokerCommission = 0.45;\r\n                  } else {\r\n                    brokerCommission = 0.4;\r\n                  }\r\n                  return total + (transaction.type == \"Secondary\" ? (pureBuyPrice + (pureBuyPrice * ((brokerCommission + sebonCommission) / 100))) : pureBuyPrice);\r\n                }, 0);\r\n\r\n                totalSellPrice = transactionHistory.sell[companyCode].reduce((total, transaction) => {\r\n                  pureSellPrice = transaction.quantity * transaction.price;\r\n                  if (pureSellPrice <= 50000) {\r\n                    brokerCommission = 0.6;\r\n                  } else if (pureSellPrice > 50000 && pureSellPrice <= 500000) {\r\n                    brokerCommission = 0.55;\r\n                  } else if (pureSellPrice > 500000 && pureSellPrice <= 2000000) {\r\n                    brokerCommission = 0.5;\r\n                  } else if (pureSellPrice > 2000000 && pureSellPrice <= 10000000) {\r\n                    brokerCommission = 0.45;\r\n                  } else {\r\n                    brokerCommission = 0.4;\r\n                  }\r\n                  return total + (pureSellPrice - (pureSellPrice * ((brokerCommission + sebonCommission) / 100)));\r\n                }, 0);\r\n\r\n                return (\r\n\r\n                  <tr key={companyCode} className={totalSellPrice - totalBuyPrice >= 0 ? \"table-success\" : \"table-danger\"}>\r\n                    <td>\r\n                      {companyCode}\r\n                    </td>\r\n\r\n                    <td>\r\n                      {\r\n                        (transactionHistory.buy[companyCode].reduce((total, transaction) =>\r\n                          total + transaction.quantity, 0\r\n                        )).toLocaleString()}\r\n                    </td>\r\n                    <td>\r\n                      Rs.{\r\n                        parseFloat(totalBuyPrice.toFixed(2)).toLocaleString()\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      Rs. {\r\n                        parseFloat(totalSellPrice.toFixed(2)).toLocaleString()\r\n                      }\r\n\r\n                    </td>\r\n                    <td>\r\n                      Rs. {parseFloat((totalSellPrice - totalBuyPrice).toFixed(2)).toLocaleString()}\r\n                    </td>\r\n                    <td>\r\n                      {parseFloat((((totalSellPrice - totalBuyPrice) / totalBuyPrice) * 100).toFixed(2)).toLocaleString()}%\r\n                    </td>\r\n                  </tr>)\r\n              }\r\n              )}\r\n          </tbody>\r\n        </Table>\r\n\r\n      setHistoryTable(tempHistoryTable);\r\n    }\r\n  }, [transactionHistory]);\r\n\r\n  useEffect(() => {\r\n\r\n    const tempHeldScripts = {}, boughtScripts = {}, soldScripts = {};\r\n\r\n\r\n    Object.keys(boughtTransactions).map(companyCode => {\r\n      boughtScripts[companyCode] = boughtTransactions[companyCode].reduce((totalBuy, transaction) =>\r\n        totalBuy + transaction.quantity\r\n        , 0)\r\n    });\r\n\r\n    Object.keys(soldTransactions).map(companyCode => {\r\n      soldScripts[companyCode] = soldTransactions[companyCode].reduce((totalSell, transaction) =>\r\n        totalSell + transaction.quantity\r\n        , 0)\r\n    });\r\n\r\n    Object.keys(boughtScripts).map(companyCode => {\r\n      if (boughtScripts[companyCode] > 0) {\r\n        tempHeldScripts[companyCode] = soldScripts.hasOwnProperty(companyCode) ? boughtScripts[companyCode] - soldScripts[companyCode] : boughtScripts[companyCode];\r\n      }\r\n\r\n    });\r\n\r\n\r\n    setHeldScripts(tempHeldScripts);\r\n\r\n  }, [boughtTransactions, soldTransactions]);\r\n\r\n  useEffect(() => {\r\n    const tempDpCharges = {};\r\n    let unfilteredArray = [], filteredArray = [];\r\n\r\n    Object.keys(boughtTransactions).map(companyCode => {\r\n      unfilteredArray = boughtTransactions[companyCode].map(transaction => transaction.type == \"Secondary\" ? transaction.date : null).concat(soldTransactions.hasOwnProperty(companyCode) ? soldTransactions[companyCode].map(transaction => transaction.date) : []);\r\n      filteredArray = unfilteredArray.filter(boughtDate => boughtDate != null);\r\n      tempDpCharges[companyCode] = [...new Set(filteredArray)].length\r\n    });\r\n    \r\n\r\n    setDpCharges(tempDpCharges);\r\n\r\n  }, [boughtTransactions, soldTransactions]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (needTransactions) {\r\n      const scriptsDocRef = firestore.collection(\"transactionHistories\").doc(uid);\r\n      const unsubscribeTransactions = scriptsDocRef\r\n        .onSnapshot((doc) => {\r\n          if (doc.exists) {\r\n            setTransactionHistory(doc.data());\r\n          }\r\n        });\r\n      return () => {\r\n        unsubscribeTransactions();\r\n      }\r\n    }\r\n\r\n  }, [needTransactions]);\r\n\r\n\r\n\r\n  const cleanStates = () => {\r\n    setSymbol('');\r\n    setType('Select Type');\r\n    setQuantity(0);\r\n    setPrice(0);\r\n    setDate(format(new Date(), 'MM/DD/YYYY'));\r\n    setContractType(null);\r\n    setManualType(null);\r\n    setEditingTransaction(false);\r\n    setEditDate(false);\r\n  }\r\n\r\n\r\n  const updatePortfolioName = (e) => {\r\n    e.preventDefault();\r\n    if (newPortfolioName != \"\" && portfolioName != newPortfolioName) {\r\n      firestore.collection(\"portfolios\").doc(uid).update({\r\n        name: newPortfolioName ? newPortfolioName : portfolioName,\r\n      })\r\n        .catch(error => {\r\n          alert(\"Cannot Update your portfolio name. Try again.\");\r\n        })\r\n    }\r\n    setEditingPortfolioName(false);\r\n  };\r\n\r\n  const updateBuySymbol = (symbol, name) => {\r\n    setSymbol(symbol);\r\n  }\r\n\r\n\r\n  const processContractNumber = (contractAction) => {\r\n    if (transactionId) {\r\n      setContractType(contractAction);\r\n      if (transactionId != '') {\r\n        const contractNumberGetRequest = { ...contractNumber, params: { ...contractNumber.params, contractNumber: transactionId } };\r\n        setDate(format(new Date(transactionId.substring(0, 4), transactionId.substring(4, 6) - 1, transactionId.substring(6, 8)), 'MM/DD/YYYY'));\r\n        axios(contractNumberGetRequest)\r\n          .then((transaction) => {\r\n            if (transaction.data) {\r\n              if (contractAction == 'buy') {\r\n                setPrice(transaction.data.RATE);\r\n                setQuantity(transaction.data.QUANTITY);\r\n                setSymbol(transaction.data.SYMBOL);\r\n                setType('Secondary');\r\n              } else {\r\n                setPrice(transaction.data.RATE);\r\n                setQuantity(transaction.data.QUANTITY);\r\n                setSymbol(transaction.data.SYMBOL);\r\n              }\r\n            } else {\r\n              setSymbol('Wrong Contract Number');\r\n            }\r\n\r\n          })\r\n      }\r\n    } else {\r\n      setContractType(null);\r\n    }\r\n  }\r\n\r\n  const buyStock = () => {\r\n\r\n    if (quantity > 0) {\r\n      const transactionsRef = firestore.collection(\"portfolios\").doc(uid);\r\n      const buyType = type == 'Select Type' ? 'Secondary' : type;\r\n      transactionsRef.update({\r\n        ['transactions.buy.' + symbol]: firebase.firestore.FieldValue.arrayUnion({ id: transactionId, type: buyType, quantity: parseFloat(quantity), price: parseFloat(price), date: Date.parse(date) / 1000 })\r\n      });\r\n    }\r\n    cleanStates();\r\n  }\r\n\r\n\r\n\r\n\r\n  const sellStock = () => {\r\n\r\n    if (quantity > 0 && price > 0) {\r\n      const transactionsRef = firestore.collection(\"portfolios\").doc(uid);\r\n      if (heldScripts[symbol] > quantity) {\r\n        transactionsRef.update({\r\n          ['transactions.sell.' + symbol]: firebase.firestore.FieldValue.arrayUnion({ id: transactionId, quantity: parseFloat(quantity), price: parseFloat(price), date: Date.parse(date) / 1000 })\r\n        })\r\n      } else if (heldScripts[symbol] == quantity) {\r\n        const historyRef = firestore.collection(\"transactionHistories\").doc(uid);\r\n        const batch = firestore.batch();\r\n        const historySoldTransaction = soldTransactions.hasOwnProperty(symbol) ?\r\n          soldTransactions[symbol].concat({ id: transactionId, quantity: parseFloat(quantity), price: parseFloat(price), date: Date.parse(date) / 1000 })\r\n          :\r\n          [{ id: transactionId, quantity: parseFloat(quantity), price: parseFloat(price), date: Date.parse(date) / 1000 }]\r\n\r\n        batch.update(historyRef, {\r\n          ['buy.' + symbol]: firebase.firestore.FieldValue.arrayUnion(...boughtTransactions[symbol]),\r\n          ['sell.' + symbol]: firebase.firestore.FieldValue.arrayUnion(...historySoldTransaction)\r\n        });\r\n\r\n        batch.update(transactionsRef, {\r\n          ['transactions.buy.' + symbol]: firebase.firestore.FieldValue.delete(),\r\n          ['transactions.sell.' + symbol]: firebase.firestore.FieldValue.delete(),\r\n        });\r\n\r\n        batch.commit();\r\n      } else {\r\n        alert(\"You are trying to sell more stocks than available !\");\r\n      }\r\n    } else {\r\n      if (price <= 0) {\r\n        alert(\"Price cannot be zero\");\r\n      } else if (quantity <= 0) {\r\n        alert(\"You cannot sell zero stocks\");\r\n      } else {\r\n        alert(\"Cannot sell. Please try again.\")\r\n      }\r\n    }\r\n    cleanStates();\r\n  }\r\n\r\n  const removeStock = () => {\r\n    firestore.collection(\"portfolios\").doc(uid).update({\r\n      ['transactions.buy.' + symbol]: firebase.firestore.FieldValue.delete(),\r\n      ['transactions.sell.' + symbol]: firebase.firestore.FieldValue.delete()\r\n    });\r\n    cleanStates();\r\n  }\r\n\r\n\r\n\r\n  const editTransaction = (editTransactionId, editQuantity, transactionType, editMode) => {\r\n\r\n    const transactionsRef = firestore.collection(\"portfolios\").doc(uid);\r\n    // const buyType = type == 'Select Type' ? 'Secondary' : type;\r\n\r\n    if ((editMode == \"update\" && quantity > 0 && price > 0) || (editMode == \"delete\") || (quantity > 0 && type == \"Bonus\")) {\r\n\r\n      if (transactionType == \"buy\") {\r\n\r\n        const newbuyTransactions = boughtTransactions[symbol].filter(transaction => transaction.id != editTransactionId);\r\n        if (editMode == \"update\") {\r\n          newbuyTransactions.push(\r\n            { id: editTransactionId, type: type, quantity: parseFloat(quantity), price: parseFloat(price), date: Date.parse(date) / 1000 }\r\n          )\r\n        }\r\n        if ((editMode == \"delete\" && heldScripts[symbol] > editQuantity) || (editMode == \"update\" && (editQuantity - quantity) < heldScripts[symbol])) {\r\n          transactionsRef.update({\r\n            ['transactions.buy.' + symbol]: newbuyTransactions.length > 0 ? newbuyTransactions : firebase.firestore.FieldValue.delete()\r\n          });\r\n        } else if ((editMode == \"delete\" && heldScripts[symbol] == editQuantity) || (editMode == \"update\" && (editQuantity - quantity) == heldScripts[symbol])) {\r\n          const confirmResult = window.confirm(soldTransactions.hasOwnProperty(symbol) ? \"Sold stocks will equal buy stocks. All your transactions will be moved to history.\" : \"This is the only transaction of \" + symbol + \". This stock will be removed from portfolio.\");\r\n          if (confirmResult) {\r\n            const historyRef = firestore.collection(\"transactionHistories\").doc(uid);\r\n            const batch = firestore.batch();\r\n\r\n            if (soldTransactions.hasOwnProperty(symbol)) {\r\n              batch.update(historyRef, {\r\n                ['buy.' + symbol]: firebase.firestore.FieldValue.arrayUnion(...newbuyTransactions),\r\n                ['sell.' + symbol]: firebase.firestore.FieldValue.arrayUnion(...soldTransactions[symbol])\r\n              });\r\n            }\r\n\r\n            batch.update(transactionsRef, {\r\n              ['transactions.buy.' + symbol]: firebase.firestore.FieldValue.delete(),\r\n              ['transactions.sell.' + symbol]: firebase.firestore.FieldValue.delete()\r\n            });\r\n\r\n            batch.commit();\r\n\r\n          }\r\n        } else {\r\n          alert(\"Cannot \" + editMode + \"! Sold stocks will be greater than bought stocks.\");\r\n        }\r\n      } else { //sell\r\n        const newSellTransactions = soldTransactions[symbol].filter(transaction => transaction.id != editTransactionId);\r\n        if (editMode == \"update\" && quantity > 0) {\r\n          newSellTransactions.push(\r\n            { id: editTransactionId, quantity: parseFloat(quantity), price: parseFloat(price), date: Date.parse(date) / 1000 }\r\n          )\r\n        }\r\n        if (quantity - editQuantity < heldScripts[symbol]) {\r\n          transactionsRef.update({\r\n            ['transactions.sell.' + symbol]: newSellTransactions.length > 0 ? newSellTransactions : firebase.firestore.FieldValue.delete()\r\n          });\r\n        } else if (quantity - editQuantity == heldScripts[symbol]) {\r\n          const confirmResult = window.confirm(\"Sold stocks will equal buy stocks. All your transactions will be moved to history.\");\r\n          if (confirmResult) {\r\n            const historyRef = firestore.collection(\"transactionHistories\").doc(uid);\r\n            const batch = firestore.batch();\r\n            batch.update(historyRef, {\r\n              ['buy.' + symbol]: firebase.firestore.FieldValue.arrayUnion(...boughtTransactions[symbol]),\r\n              ['sell.' + symbol]: firebase.firestore.FieldValue.arrayUnion(...newSellTransactions)\r\n            });\r\n\r\n\r\n            batch.update(transactionsRef, {\r\n              ['transactions.buy.' + symbol]: firebase.firestore.FieldValue.delete(),\r\n              ['transactions.sell.' + symbol]: firebase.firestore.FieldValue.delete()\r\n            });\r\n\r\n            batch.commit();\r\n          }\r\n        } else {\r\n          alert(\"You are trying to sell more stocks than available !\");\r\n        }\r\n      }\r\n    } else {\r\n      if (price <= 0 && type != \"Bonus\") {\r\n        alert(\"Price cannot zero.\")\r\n      } else if (quantity <= 0) {\r\n        alert(\"Quantity cannot be zero\");\r\n      } else {\r\n        alert(\"Cannot edit your transaction. Please try again.\")\r\n      }\r\n    }\r\n    cleanStates();\r\n  }\r\n\r\n  const upgradePortfolio = () => {\r\n    let portfolioName, oldBuyTransactions, oldSellTransactions, newbuyTransactions = {}, newSellTransactions = {};\r\n    firestore.collection(\"transactions\").doc(uid)\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          oldBuyTransactions = doc.data().portfolio.buy;\r\n          oldSellTransactions = doc.data().portfolio.sell;\r\n          portfolioName = doc.data().name;\r\n          const oldSoldScripts = Object.keys(oldSellTransactions);\r\n\r\n\r\n          Object.keys(oldBuyTransactions).map(companyCode => {\r\n            if (!oldSoldScripts.includes(companyCode)) {\r\n              newbuyTransactions[companyCode] = oldBuyTransactions[companyCode].map(transaction => {\r\n                transaction.type = transaction.type == \"Select Type\" ? \"Secondary\" : transaction.type;\r\n                return transaction;\r\n              })\r\n            }\r\n          });\r\n\r\n          setUnupgradedScripts(oldSoldScripts);\r\n          setUpgradedScripts(Object.keys(oldBuyTransactions).filter(companyCode => !oldSoldScripts.includes(companyCode)));\r\n\r\n          const batch = firestore.batch();\r\n\r\n          batch.set(firestore.collection(\"portfolios\").doc(uid), {\r\n            name: portfolioName,\r\n            transactions: {\r\n              buy: newbuyTransactions,\r\n              sell: {}\r\n            }\r\n          });\r\n\r\n          batch.set(firestore.collection(\"transactionHistories\").doc(uid), {\r\n            buy: {},\r\n            sell: {}\r\n          });\r\n\r\n          batch.commit()\r\n            .then(response => {\r\n              setUpgrade(true);\r\n              setPortfolioName(portfolioName)\r\n            })\r\n            .catch(error => {\r\n              alert(\"Cannot Upgrade your portfolio. Please Try again.\");\r\n            });\r\n\r\n        } else {\r\n          const batch = firestore.batch();\r\n\r\n          batch.set(firestore.collection(\"portfolios\").doc(uid), {\r\n            name: \"My Portfolio\",\r\n            transactions: {\r\n              buy: {},\r\n              sell: {}\r\n            }\r\n          });\r\n\r\n          batch.set(firestore.collection(\"transactionHistories\").doc(uid), {\r\n            buy: {},\r\n            sell: {}\r\n          });\r\n\r\n          batch.commit()\r\n            .catch(error => {\r\n              alert(\"Cannot Create your portfolio. Please Try again.\");\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  const getTransactionHistory = () => {\r\n\r\n\r\n    firestore.collection(\"transactionHistories\").doc(uid).get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          setTransactionHistory(doc.data());\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert(\"Cannot get history at the moment.\");\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"animated fadeIn\">\r\n        {!uid ? <Redirect to=\"/login\" /> : null}\r\n        {!emailVerified && uid ? <Redirect to=\"/verify\" /> : null}\r\n        <React.Fragment>\r\n          <Row>\r\n            <Col className=\"px-0\">\r\n              <Card>\r\n                <CardHeader className=\"bg-info\">\r\n                  {portfolioName ? <React.Fragment>\r\n                    <div className=\"d-inline-block\">\r\n                      <h4>{!editingPorfolioName ? portfolioName : \"New Portfolio Name\"}</h4>\r\n                      <FormGroup className={editingPorfolioName ? \"d-block\" : \"d-none\"}>\r\n                        <Input type=\"text\" onChange={e => { setNewPortfolioName(e.target.value) }} />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"d-inline-block ml-1\">\r\n                      <i title=\"Save Portfolio Name\" className={!editingPorfolioName ? \"fa fa-edit d-block\" : \"d-none\"} onClick={() => { setEditingPortfolioName(true) }} />\r\n                    </div>\r\n                    <div className=\"d-inline-block ml-1\">\r\n                      <i size=\"lg\" title=\"Edit Portfolio Name\" className={editingPorfolioName ? \"fa fa-check d-block\" : \"d-none\"} onClick={updatePortfolioName} />\r\n                    </div>\r\n\r\n                    {Object.keys(heldScripts).length > 0 && JSON.stringify(Object.keys(heldScripts).sort()) == JSON.stringify(Object.keys(rate).sort()) && JSON.stringify(Object.keys(rate).sort()) == JSON.stringify(Object.keys(previousRate).sort()) ?\r\n                      <div className=\"float-right\">\r\n\r\n                        <Badge color={Object.keys(heldScripts).reduce((gainToday, companyCode) =>\r\n                          gainToday + ((heldScripts[companyCode] * rate[companyCode].closeIndex) - (heldScripts[companyCode] * previousRate[companyCode].closeIndex)), 0\r\n                        ) >= 0 ? \"success\" : \"danger\"} >\r\n                          <strong className=\"h4 pl-1\">\r\n                            {\r\n                              Object.keys(heldScripts).reduce((gainToday, companyCode) =>\r\n                                gainToday + ((heldScripts[companyCode] * rate[companyCode].closeIndex) - (heldScripts[companyCode] * previousRate[companyCode].closeIndex)), 0\r\n                              )\r\n                            } </strong>\r\n                        </Badge>\r\n                        <small>Today</small>\r\n                      </div>\r\n                      :\r\n                      null}\r\n                  </React.Fragment>\r\n                    :\r\n                    <div>Getting Your Portfolio ...</div>\r\n                  }\r\n\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {Object.keys(effectiveBoughtPrices).length > 0 && JSON.stringify(Object.keys(boughtTransactions).sort()) == JSON.stringify(Object.keys(effectiveBoughtPrices).sort()) && JSON.stringify(Object.keys(rate).sort()) == JSON.stringify(Object.keys(boughtTransactions).sort()) ?\r\n                    <Row>\r\n                      <Col sm=\"6\">\r\n                        <Row>\r\n                          <Col sm=\"6\">\r\n                            <div className=\"callout callout-info\">\r\n                              <small className=\"text-muted\">Total Investment</small>\r\n                              <br />\r\n                              <strong className=\"h4\">\r\n                                {(Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                  totalInvestment + (heldScripts[companyCode] * averageBuyRate[companyCode]), 0)\r\n                                ).toFixed(2)\r\n                                }\r\n                              </strong>\r\n                            </div>\r\n                          </Col>\r\n                          <Col sm=\"6\">\r\n                            <div className=\"callout callout-danger\">\r\n                              <small className=\"text-muted\">Net Worth</small>\r\n                              <br />\r\n                              <strong className=\"h4\">\r\n                                {(Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                  totalInvestment + (heldScripts[companyCode] * effectiveRate[companyCode]), 0)\r\n                                ).toFixed(2)\r\n                                }\r\n                              </strong>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col sm=\"12\" className=\"d-none d-sm-block\">\r\n                            <Pie data={{\r\n                              labels: Object.keys(boughtTransactions), datasets: [{\r\n                                data: Object.keys(heldScripts).map(companyCode =>\r\n                                  parseFloat((heldScripts[companyCode] * averageBuyRate[companyCode]).toFixed(2))\r\n                                ), backgroundColor: pieBackground,\r\n                              }]\r\n                            }} options={{\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Investment Ratio',\r\n                                position: 'bottom'\r\n                              },\r\n                              legend: {\r\n                                display: false,\r\n                                position: 'right'\r\n                              }\r\n                            }\r\n                            } />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n\r\n                      <Col sm=\"6\">\r\n                        <Row>\r\n                          <Col sm=\"6\">\r\n                            <div className=\"callout callout-warning\">\r\n                              <small className=\"text-muted\">Net Return</small>\r\n                              <br />\r\n                              <strong className=\"h4\">\r\n                                {(\r\n                                  Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                    totalInvestment + (heldScripts[companyCode] * effectiveRate[companyCode]), 0)\r\n                                  -\r\n                                  Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                    totalInvestment + (heldScripts[companyCode] * averageBuyRate[companyCode]), 0)\r\n                                ).toFixed(2)\r\n                                }\r\n                              </strong>\r\n                            </div>\r\n                          </Col>\r\n                          <Col sm=\"6\">\r\n                            <div className=\"callout callout-success\">\r\n                              <small className=\"text-muted\">Percent Return</small>\r\n                              <br />\r\n                              <strong className=\"h4\">\r\n                                {(((\r\n                                  Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                    totalInvestment + (heldScripts[companyCode] * effectiveRate[companyCode]), 0)\r\n                                  -\r\n                                  Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                    totalInvestment + (heldScripts[companyCode] * averageBuyRate[companyCode]), 0)\r\n                                ) / Object.keys(heldScripts).reduce((totalInvestment, companyCode) =>\r\n                                  totalInvestment + (heldScripts[companyCode] * averageBuyRate[companyCode]), 0)\r\n                                ) * 100).toFixed(2)\r\n                                }\r\n                                %\r\n                                 </strong>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col sm=\"12\" className=\"d-none d-sm-block\">\r\n                            <Pie data={{\r\n                              labels: Object.keys(boughtTransactions), datasets: [{\r\n                                data: Object.keys(heldScripts).map(companyCode =>\r\n                                  heldScripts[companyCode] * effectiveRate[companyCode]\r\n                                ), backgroundColor: pieBackground,\r\n                              }]\r\n                            }} options={{\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Networth Ratio',\r\n                                position: 'bottom'\r\n                              },\r\n                              legend: {\r\n                                display: true,\r\n                                position: 'right',\r\n                                labels: {\r\n                                  boxWidth: 5\r\n                                }\r\n                              }\r\n                            }\r\n                            } />\r\n                          </Col>\r\n                        </Row>\r\n\r\n                      </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row><Col sm=\"12\"> <h5 className=\"text-info\">Add Stocks below for portfolio graphs</h5></Col></Row>\r\n                  }\r\n\r\n\r\n\r\n                  <br />\r\n                  <Row>\r\n                    <Col xs=\"12\">\r\n                      <Card>\r\n                        <CardHeader className=\"bg-primary\">\r\n                          Add Stock to portfolio\r\n                            <Button onClick={() => { setManualType(\"showHistory\"); setNeedTransactions(true) }} className=\"btn-warning float-right\" size=\"sm\">Portfolio History</Button>\r\n\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <Form onSubmit={buyStock} inline>\r\n                            <FormGroup>\r\n                              <Row>\r\n                                <Col md=\"12\">\r\n                                  <Input className=\"mb-1\" type=\"text\" placeholder=\"Contract Number\" onChange={e => setTransactionId(String(e.target.value).trim())} required />\r\n                                  <Button className=\"mx-1 mb-1\" color=\"success\" onClick={() => processContractNumber(\"buy\")}>Buy</Button>\r\n                                  <Button className=\"mx-1 mb-1\" color=\"danger\" onClick={() => processContractNumber(\"sell\")}>Sell</Button>\r\n                                  <Button className=\"mx-1 mb-1\" outline color=\"primary\" onClick={() => { setManualType(\"buy\"); setTransactionId(Math.round(Date.now() / 1000)) }}>Buy Manually</Button>\r\n                                </Col>\r\n                              </Row>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col className=\"px-0\">\r\n                      <Table hover responsive size=\"sm\" className=\"table-outline mb-0\">\r\n                        <thead className=\"bg-primary\">\r\n                          <tr>\r\n                            <th className=\"d-none d-md-table-cell\">SNO</th>\r\n                            <th>Stock</th>\r\n                            <th className=\"d-none d-sm-table-cell\">Quantity</th>\r\n                            <th className=\"d-none d-sm-table-cell\">Price</th>\r\n                            <th>Invest</th>\r\n                            <th>Worth</th>\r\n                            <th>Return</th>\r\n                            <th className=\"d-none d-sm-table-cell\">Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                          {\r\n                            Object.keys(boughtTransactions).map((key, index) => {\r\n                              if (rate.hasOwnProperty(key) && previousRate.hasOwnProperty(key) && heldScripts.hasOwnProperty(key) && averageBuyRate.hasOwnProperty(key) && effectiveRate.hasOwnProperty(key)) {\r\n                                return (\r\n                                  <tr key={key} className={((effectiveRate[key] * heldScripts[key]) - dpCharge) - ((averageBuyRate[key] * heldScripts[key]) + dpCharges[key] * dpCharge) >= 0\r\n                                    ? \"table-success\" : \"table-danger\"}>\r\n                                    <td className=\"d-none d-md-table-cell\">{index + 1}</td>\r\n                                    <td>\r\n                                      <div>{key}</div>\r\n                                      <div className=\"small text-muted\">\r\n                                        <span>LTP | </span>{\r\n                                          (rate[key].closeIndex).toLocaleString()\r\n                                        }\r\n                                      </div>\r\n                                    </td>\r\n\r\n                                    <td className=\"d-none d-sm-table-cell\">\r\n                                      <div>{heldScripts[key].toLocaleString()}</div>\r\n                                      <div className=\"small text-muted d-none d-sm-block\">\r\n                                        <span>Transactions | </span>\r\n                                        {boughtTransactions[key].length\r\n                                          +\r\n                                          (soldTransactions.hasOwnProperty(key) ? soldTransactions[key].length : 0)}\r\n\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"d-none d-sm-table-cell\">\r\n                                      <div>{parseFloat((\r\n                                        boughtTransactions[key].reduce((averagePrice, transaction) =>\r\n                                          averagePrice + ((transaction.quantity * transaction.price) / boughtTransactions[key].reduce((total, transaction) => total + transaction.quantity, 0)), 0\r\n                                        )).toFixed(2)).toLocaleString()\r\n                                      }\r\n                                      </div>\r\n                                      <div className=\"small text-muted d-none d-sm-block\">\r\n                                        <span>Net | {averageBuyRate[key].toFixed(2)}</span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div>\r\n                                        {parseFloat(((\r\n                                          boughtTransactions[key].reduce((averagePrice, transaction) =>\r\n                                            averagePrice + ((transaction.quantity * transaction.price) / boughtTransactions[key].reduce((total, transaction) => total + transaction.quantity, 0)), 0\r\n                                          )) * heldScripts[key]).toFixed(2)).toLocaleString()\r\n                                        }\r\n                                      </div>\r\n                                      <div className=\"small text-muted\">\r\n                                        <span>Net |\r\n                                          {\r\n                                            parseFloat(((averageBuyRate[key] * heldScripts[key]) + (dpCharges[key] * dpCharge)).toFixed(2)).toLocaleString()\r\n                                          }\r\n                                        </span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div>{parseFloat((heldScripts[key] * rate[key].closeIndex).toFixed(2)).toLocaleString()}\r\n                                      </div>\r\n                                      <div className=\"small text-muted\">\r\n                                        <span>Net | </span>{\r\n                                          parseFloat(((heldScripts[key] * effectiveRate[key]) - dpCharge).toFixed(2)).toLocaleString()\r\n                                        }\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"clearfix\">\r\n                                        <div className=\"float-right d-none d-md-block\">\r\n                                          <small>Overall</small>\r\n                                        </div>\r\n                                        <div className=\"float-left\">\r\n                                          <strong>{\r\n                                            parseFloat(((effectiveRate[key] * heldScripts[key]) -\r\n                                              (averageBuyRate[key] * heldScripts[key])).toFixed(2)).toLocaleString()\r\n                                          } </strong>\r\n                                          <small>({((((effectiveRate[key] * heldScripts[key]) -\r\n                                            (averageBuyRate[key] * heldScripts[key])) / (averageBuyRate[key] * heldScripts[key])) * 100).toFixed(2)\r\n                                          }%)</small>\r\n                                        </div>\r\n                                      </div>\r\n                                      {(effectiveRate[key] * heldScripts[key]) -\r\n                                        (averageBuyRate[key] * heldScripts[key]) > 0 ?\r\n                                        <Progress className=\"progress-xs\" multi>\r\n                                          <Progress bar color=\"primary\" value={((heldScripts[key] * averageBuyRate[key]) / (heldScripts[key] * effectiveRate[key])) * 100} />\r\n                                          <Progress bar color=\"success\" value={100 - ((((heldScripts[key] * averageBuyRate[key]) / (heldScripts[key] * effectiveRate[key]))) * 100)} />\r\n                                        </Progress>\r\n                                        :\r\n                                        <Progress className=\"progress-xs\" multi>\r\n                                          <Progress bar color=\"primary\" value={((heldScripts[key] * effectiveRate[key]) / (heldScripts[key] * averageBuyRate[key])) * 100} />\r\n                                          <Progress bar color=\"danger\" value={100 - ((((heldScripts[key] * effectiveRate[key]) / (heldScripts[key] * averageBuyRate[key]))) * 100)} />\r\n                                        </Progress>\r\n                                      }\r\n                                      <div className=\"clearfix\">\r\n                                        <div className=\"float-right d-none d-md-block\">\r\n                                          <small className=\"text-muted\">Today</small>\r\n                                        </div>\r\n                                        <div className=\"float-left\">\r\n                                          <strong>{(heldScripts[key] * (rate[key].closeIndex - previousRate[key].closeIndex)).toFixed(2)}</strong>\r\n                                          <small>({(((heldScripts[key] * (rate[key].closeIndex - previousRate[key].closeIndex)) / (previousRate[key].closeIndex * heldScripts[key])) * 100).toFixed(2)}%)</small>\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"d-none d-sm-table-cell\">\r\n                                      <i title=\"View Transactions\" className=\"fa fa-eye\" onClick={() => { setSymbol(key); setManualType('show'); }} />\r\n                                      <i title=\"Sell Stock\" className=\"fa fa-money ml-2\" onClick={() => { setSymbol(key); setManualType('sell'); setTransactionId((Math.round(Date.now() / 1000))) }} />\r\n                                      <i title=\"Remove Stock\" className=\"fa fa-times ml-2\" onClick={() => { setSymbol(key); setManualType('remove') }} />\r\n                                    </td>\r\n                                  </tr>\r\n                                )\r\n                              }\r\n                            })}\r\n                        </tbody>\r\n                      </Table>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <div>\r\n            <Modal isOpen={contractType && transactionId} toggle={cleanStates}>\r\n              <ModalHeader toggle={cleanStates}><div className=\"d-inline-block\">Transaction Detail </div><div className=\"d-inline-block\">{!symbol ? <Spinner /> : null}</div></ModalHeader>\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Company Symbol</Label>\r\n                      <Input disabled value={symbol} type=\"text\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Date</Label>\r\n                      <Input disabled value={date} type=\"text\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Price</Label>\r\n                      <Input disabled value={price} type=\"number\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Quantity</Label>\r\n                      <Input disabled value={quantity} type=\"number\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Total</Label>\r\n                      <Input disabled value={price * quantity} type=\"number\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button disabled={symbol == \"Wrong Contract Number\" ? true : false} color=\"primary\" onClick={contractType == 'buy' ? buyStock : sellStock}>{contractType == 'buy' ? 'Buy' : 'Sell'}</Button>{' '}\r\n                <Button color=\"warning\" onClick={cleanStates}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={manualType == \"sell\" ? true : false} toggle={cleanStates}>\r\n              <ModalHeader toggle={cleanStates}>Sell Stock {symbol}</ModalHeader>\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Input type=\"number\" onChange={e => setPrice(parseInt(e.target.value, 10))} placeholder=\"Price Per Share\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      {heldScripts.hasOwnProperty(symbol) ?\r\n                        <small className={quantity <= heldScripts[symbol] ? \"text-muted\" : \"text-danger\"}>{quantity <= heldScripts[symbol] ? \"Available:\" + heldScripts[symbol] : \"Only \" + heldScripts[symbol] + \" available\"}</small>\r\n                        :\r\n                        null\r\n                      }\r\n                      <Input type=\"number\" onChange={e => setQuantity(parseInt(e.target.value, 10))} placeholder=\"Number Of Shares\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <small className=\"text-muted\">Total</small>\r\n                      <Input type=\"number\" disabled placeholder=\"Number Of Shares\" value={price * quantity} />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup row>\r\n                      <Col md=\"12\">\r\n                        <InputGroup>\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              Sell Date\r\n                                </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input type=\"date\" onChange={e => setDate(e.target.value)} name=\"date-input\" placeholder=\"date\" />\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={sellStock}>Sell</Button>{' '}\r\n                <Button color=\"warning\" onClick={cleanStates}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={manualType == 'buy' ? true : false} toggle={cleanStates}>\r\n              <ModalHeader toggle={cleanStates}>Buy Stock</ModalHeader>\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col sm=\"6\">\r\n                    <FormGroup>\r\n                      <CompanyAutoSuggest onSuggestionSelected={updateBuySymbol} />\r\n                      <small className=\"text-muted\">Type Name or Symbol</small>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col sm=\"6\">\r\n                    <FormGroup>\r\n                      <ButtonDropdown isOpen={buttonDropdown} toggle={() => { setButtonDropdown(!buttonDropdown) }}>\r\n                        <DropdownToggle caret color=\"primary\">\r\n                          {type}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem onClick={e => setType(e.target.innerText)} >IPO</DropdownItem>\r\n                          <DropdownItem onClick={e => { setType(e.target.innerText) }} >Secondary</DropdownItem>\r\n                          <DropdownItem onClick={e => { setPrice(0); setType(e.target.innerText) }} >Bonus</DropdownItem>\r\n                          <DropdownItem onClick={e => setType(e.target.innerText)} >Right</DropdownItem>\r\n                          <DropdownItem onClick={e => setType(e.target.innerText)} >FPO</DropdownItem>\r\n                          <DropdownItem onClick={e => setType(e.target.innerText)} >Auction</DropdownItem>\r\n                        </DropdownMenu>\r\n                      </ButtonDropdown>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Input disabled={type == \"Bonus\" ? true : false} type=\"number\" onChange={e => setPrice(parseInt(e.target.value, 10))} placeholder=\"Price Per Share\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup>\r\n                      <Input type=\"number\" onChange={e => setQuantity(parseInt(e.target.value, 10))} placeholder=\"Number Of Shares\" required />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <FormGroup row>\r\n                      <Col md=\"12\">\r\n                        <InputGroup>\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              Bought Date\r\n                                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input type=\"date\" onChange={e => setDate(e.target.value)} name=\"date-input\" placeholder=\"date\" />\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={buyStock}>Buy</Button>{' '}\r\n                <Button color=\"warning\" onClick={cleanStates}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={manualType == \"remove\" ? true : false} toggle={cleanStates}>\r\n              <ModalHeader toggle={cleanStates}>Permanently Remove {symbol} From Portfolio ?</ModalHeader>\r\n              <ModalBody>\r\n\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <strong>If you have sold all of {symbol}'s stock than use sell function so that {symbol}'s\r\n                      transaction will be saved in history.</strong>\r\n                  </Col>\r\n                </Row>\r\n\r\n\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"danger\" onClick={removeStock}>Delete Permanently</Button>{' '}\r\n                <Button color=\"success\" onClick={() => { setManualType('sell'); setTransactionId((Math.round(Date.now() / 1000))) }}>Use Sell Function</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" isOpen={manualType == \"show\" ? true : false} toggle={cleanStates}>\r\n              <ModalHeader toggle={cleanStates}>Transaction History of {symbol}</ModalHeader>\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col sm=\"12\">\r\n                    {boughtTransactions.hasOwnProperty(symbol) && effectiveBoughtPrices.hasOwnProperty(symbol) ?\r\n                      <React.Fragment>\r\n                        <h6>Bought Transactions</h6>\r\n                        <Table size=\"sm\" bordered striped >\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Type</th>\r\n                              <th>Price</th>\r\n                              <th>Quantity</th>\r\n                              <th>Total</th>\r\n                              <th>Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              boughtTransactions[symbol].map((transaction, index) => (\r\n\r\n                                <tr key={index}>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {format(new Date(transaction.date * 1000), 'D-MMM-YYYY')}\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <Input type={editDate ? \"date\" : \"text\"} onFocus={e => { setEditDate(true) }} onChange={e => setDate(e.target.value)} name=\"date-input\" placeholder={date} />\r\n                                    </div>\r\n                                  </td>\r\n\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {transaction.type}\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <FormGroup>\r\n                                        <ButtonDropdown size=\"sm\" direction=\"up\" isOpen={buttonDropdown} toggle={() => { setButtonDropdown(!buttonDropdown) }}>\r\n                                          <DropdownToggle color=\"primary\">\r\n                                            {type}\r\n                                          </DropdownToggle >\r\n                                          <DropdownMenu right>\r\n                                            <DropdownItem onClick={e => setType(e.target.innerText)} >IPO</DropdownItem>\r\n                                            <DropdownItem onClick={e => { setType(e.target.innerText) }} >Secondary</DropdownItem>\r\n                                            <DropdownItem onClick={e => { setPrice(0); setType(e.target.innerText) }} >Bonus</DropdownItem>\r\n                                            <DropdownItem onClick={e => setType(e.target.innerText)} >Right</DropdownItem>\r\n                                            <DropdownItem onClick={e => setType(e.target.innerText)} >FPO</DropdownItem>\r\n                                            <DropdownItem onClick={e => setType(e.target.innerText)} >Auction</DropdownItem>\r\n                                          </DropdownMenu>\r\n                                        </ButtonDropdown>\r\n                                      </FormGroup>\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {transaction.price}\r\n                                      <div>\r\n                                        <small>Net | {(effectiveBoughtPrices[symbol][index]).toFixed(2)}</small>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <Input disabled={type == \"Bonus\" ? true : false} type=\"number\" onChange={e => setPrice(parseInt(e.target.value, 10))} value={price} required />\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {transaction.quantity}\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <Input type=\"number\" onChange={e => setQuantity(parseInt(e.target.value, 10))} value={quantity} required />\r\n                                    </div>\r\n\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {(effectiveBoughtPrices[symbol][index] * transaction.quantity).toFixed(2)}\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      {quantity * price}\r\n                                    </div>\r\n\r\n                                  </td>\r\n                                  <td>\r\n\r\n                                    <div>\r\n                                      <i title=\"Edit Transaction\" className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"fa fa-edit ml-2\"} onClick={() => { setTransactionId(transaction.id); setEditingTransaction(true); setPrice(transaction.price); setQuantity(transaction.quantity); setType(transaction.type); setDate(format(new Date(transaction.date * 1000), 'MM/DD/YYYY')) }} />\r\n                                      <i title=\"Remove Transaction\" className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"fa fa-trash ml-2\"} onClick={() => { setEditingTransaction(false); editTransaction(transaction.id, transaction.quantity, \"buy\", \"delete\") }} />\r\n                                      <i title=\"Save\" className={editingTransaction && transaction.id == transactionId ? \"fa fa-check ml-2\" : \"d-none\"} onClick={() => { setEditingTransaction(false); editTransaction(transaction.id, transaction.quantity, \"buy\", \"update\") }} />\r\n                                      <i title=\"cancel\" className={editingTransaction && transaction.id == transactionId ? \"fa fa-window-close ml-2\" : \"d-none\"} onClick={() => { setTransactionId(null); setEditingTransaction(false) }} />\r\n\r\n                                    </div>\r\n\r\n                                  </td>\r\n                                </tr>))}\r\n                          </tbody>\r\n                        </Table>\r\n                      </React.Fragment>\r\n                      :\r\n                      <h6>No Transactions</h6>\r\n                    }\r\n                    {soldTransactions.hasOwnProperty(symbol) && effectiveSoldPrices.hasOwnProperty(symbol) ?\r\n                      <React.Fragment>\r\n                        <h6>Sold Transactions</h6>\r\n                        <Table size=\"sm\" bordered responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Price</th>\r\n                              <th>Quantity</th>\r\n                              <th>Total</th>\r\n                              <th>Return</th>\r\n                              <th>Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              soldTransactions[symbol].map((transaction, index) => (\r\n\r\n                                <tr key={index} className={((effectiveSoldPrices[symbol][index] * transaction.quantity) - (effectiveBoughtPrices[symbol][index] * transaction.quantity)) >= 0 ? \"table-success\" : \"table-danger\"}>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {format(new Date(transaction.date * 1000), 'D-MMM-YYYY')}\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <Input type={editDate ? \"date\" : \"text\"} onFocus={e => { setEditDate(true) }} onChange={e => setDate(e.target.value)} name=\"date-input\" placeholder={date} />\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      <div>{transaction.price}</div>\r\n                                      <div>\r\n                                        <small>Net | {(effectiveSoldPrices[symbol][index]).toFixed(2)}</small>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <Input disabled={type == \"Bonus\" ? true : false} type=\"number\" onChange={e => setPrice(parseInt(e.target.value, 10))} value={price} required />\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"d-block\"}>\r\n                                      {transaction.quantity}\r\n                                    </div>\r\n                                    <div className={editingTransaction && transaction.id == transactionId ? \"d-block\" : \"d-none\"}>\r\n                                      <Input type=\"number\" onChange={e => setQuantity(parseInt(e.target.value, 10))} value={quantity} required />\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>{(effectiveSoldPrices[symbol][index] * transaction.quantity).toFixed(2)}</td>\r\n                                  <td>{((effectiveSoldPrices[symbol][index] * transaction.quantity) - (averageBuyRate[symbol] * transaction.quantity)).toFixed(2)}</td>\r\n                                  <td>\r\n                                    <div>\r\n                                      <i title=\"Edit Transaction\" className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"fa fa-edit ml-2\"} onClick={() => { setTransactionId(transaction.id); setEditingTransaction(true); setPrice(transaction.price); setQuantity(transaction.quantity); setType(transaction.type); setDate(format(new Date(transaction.date * 1000), 'MM/DD/YYYY')) }} />\r\n                                      <i title=\"Remove Transaction\" className={editingTransaction && transaction.id == transactionId ? \"d-none\" : \"fa fa-trash ml-2\"} onClick={() => { setEditingTransaction(false); editTransaction(transaction.id, transaction.quantity, \"sell\", \"delete\") }} />\r\n                                      <i title=\"Save\" className={editingTransaction && transaction.id == transactionId ? \"fa fa-check ml-2\" : \"d-none\"} onClick={() => { setEditingTransaction(false); editTransaction(transaction.id, transaction.quantity, \"sell\", \"update\") }} />\r\n                                      <i title=\"cancel\" className={editingTransaction && transaction.id == transactionId ? \"fa fa-window-close ml-2\" : \"d-none\"} onClick={() => { setTransactionId(null); setEditingTransaction(false) }} />\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              ))}\r\n                          </tbody>\r\n                        </Table>\r\n                      </React.Fragment> :\r\n                      <h6>No Sold Transactions</h6>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <strong>Total DP charge: {dpCharges[symbol] * dpCharge}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"warning\" onClick={cleanStates}>Close</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" isOpen={upgrade} toggle={cleanStates}>\r\n              <ModalHeader>\r\n                Congratulations!! Your Portfolio has been upgraded.\r\n                    </ModalHeader>\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <strong>Following enhancement has been added to portfolio</strong>\r\n                    <ul>\r\n                      <li>Ability to Edit and Remove individual transaction instead of whole company.</li>\r\n                      <li>View Portfolio History and Edit Portfolio Name Feature added.</li>\r\n                      <li>Fixed issue with commission calculation.</li>\r\n                      <li>Fixed Crashes and Enhanced Performance</li>\r\n                      <li>Fixed date issues.</li>\r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n                {upgradedScripts.length > 0 ?\r\n                  <Row>\r\n                    <Col xs=\"12\">\r\n                      <strong>Congratulations! Following Scripts were migrated to new portfolio. </strong>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                      <ul>\r\n                        {upgradedScripts.map(companyCode => <li key={companyCode}>{companyCode}</li>)}\r\n                      </ul>\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  null\r\n                }\r\n                {unupgradedScripts.length > 0 ?\r\n                  <Row>\r\n                    <Col xs=\"12\">\r\n                      <strong>Unfortunately, following Scripts couldn't be migrated to new portfolio. Please re-enter them after login. </strong>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                      <ul>\r\n                        {unupgradedScripts.map(companyCode => <li key={companyCode}>{companyCode}</li>)}\r\n                      </ul>\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  null\r\n                }\r\n                {document.URL.match(/^https?:/) ?\r\n                  <Row>\r\n                    <Col xs=\"12\">\r\n                      <h3>Note</h3>\r\n                      <strong>You Need to Update your android app to version 3.0.0 to use new Upgraded portfolio.</strong>\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  null}\r\n                <Row>\r\n\r\n                  <Col xs=\"12\">\r\n                    <strong>Please login again to complete upgrade.</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                    <Button className=\"float-right btn-success\" onClick={() => firebase.auth().signOut()}>Relogin</Button>\r\n                  </Col>\r\n                </Row>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" isOpen={manualType == \"showHistory\" ? true : false} toggle={cleanStates}>\r\n              <ModalHeader toggle={cleanStates}>Portfolio History</ModalHeader>\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col sm=\"12\">\r\n                    {historyTable}\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n          </div>\r\n        </React.Fragment>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n"],"sourceRoot":""}